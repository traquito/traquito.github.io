{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Traquito WSPR Pico Balloon Resources","text":"<ul> <li> <p> Jetpack WSPR Tracker </p> </li> <li> <p> Solar System </p> </li> <li> <p> Spot Search </p> </li> <li> <p> Channel Map </p> </li> <li> <p> Tracker GUI </p> </li> <li> <p> Wind-O-Matic 5000 </p> </li> <li> <p> Pro Tools </p> </li> <li> <p> Updates </p> </li> <li> <p> FAQ </p> </li> </ul>"},{"location":"WOM5000/","title":"Wind-O-Matic 5000","text":""},{"location":"WOM5000/#overview","title":"Overview","text":"<p>Wind-O-Matic 5000 is a device which makes measuring out wire antennas for 20m band effortless.</p> <p>30 seconds to success!</p> <ul> <li>Attach antenna wire to your spool tube</li> <li>Mount spool tube on the WOM5000</li> <li>Press the \"Activate\" button</li> <li>30 seconds later the right length of wire for 20m (199.2\") has been spooled!</li> </ul>"},{"location":"WOM5000/#how-to-get","title":"How to Get","text":"<p>There are several sets of things you need</p> <ul> <li>List of circuit components from Adafruit</li> <li>The 3D print files for the WOM5000 Platform and Drum</li> <li>The firmware to run the RPi Pico</li> </ul> <p>You probably already have some of the components you need.  </p> <p>File downloads below.</p>"},{"location":"WOM5000/#wind-o-matic-5000-3d-parts","title":"Wind-O-Matic 5000 3D Parts","text":"<p>There are two 3D parts -- the platform and the drum.</p>"},{"location":"WOM5000/#the-platform","title":"The platform","text":"<p>All sections necessary to hold everything together neatly.</p> <p></p>"},{"location":"WOM5000/#the-drum","title":"The drum","text":"<p>Press fit to the stepper, used to hold your antenna spool in place during winding.</p> <p></p>"},{"location":"WOM5000/#how-to-assemble","title":"How to Assemble","text":"<p>Assmble the 3D parts</p> <ul> <li>Press-fit (hard) the Drum to the stepper motor shaft</li> <li>Insert the stepper motor into the 4-corner retention area</li> <li>Flash the RPi Pico with firmware</li> <li>Solder headers on the RPi Pico and Stepper Controller</li> <li>Put RPi Pico and Stepper Controller on a mini breadboard on the Platform</li> <li>Use jumper wires to wire up the RPi Pico and Stepper Controller (see below)</li> <li>Wire in 5v regulator (see below)</li> <li>Wire in stepper (see below)</li> <li>Wire in power button (not shown below)</li> <li>Wire in Activate button (not shown below)</li> </ul> <p>Soldering is required for some connections!</p> <p>Details of how to wire in the buttons are left to the user.  </p> <p>The buttons are not meant to be mounted with screw backing, use a dab of hot glue or superglue to hold in place.  </p>"},{"location":"WOM5000/#wiring-diagram","title":"Wiring Diagram","text":""},{"location":"WOM5000/#front-view","title":"Front View","text":""},{"location":"WOM5000/#top-view","title":"Top View","text":""},{"location":"WOM5000/#file-downloads","title":"File Downloads","text":"File Description Wind-O-Matic 5000 Platform 3D ModelWind-O-Matic 5000 Drum 3D ModelWind-O-Matic 5000 RPi Pico Firmware Released 2024-01-30"},{"location":"channelmap/","title":"Channel Map","text":"Band          2190m (LF) 630m (MF) 160m 80m 60m 40m 30m 20m 17m 15m 12m 10m 6m 4m 2m 70cm 23cm Telemetry Lookback Days  search (wspr.live data) query wspr.live  |         query qrp labs  |         query lu7aa  |                   Click table to freeze/unfreeze info          Hans' QRP Labs U4B Tracking lu7aa tracking","boost":10},{"location":"channelmap/help/","title":"Channel Map Help","text":""},{"location":"channelmap/help/#overview","title":"Overview","text":"<p>This page describes Channels, the Channel Map, and how to use them when flying a tracker.</p>"},{"location":"channelmap/help/#channels","title":"Channels","text":"<p>A Channel is a number that you configure your tracker with. It informs your tracker how to transmit data simultaneously with other trackers without them interfering with each other.</p>"},{"location":"channelmap/help/#channel-map","title":"Channel Map","text":"<p>The Channel Map is a visualization that helps users more intuitively understand the relationship between channel number, transmission schedule, registration, and other details.</p> <p>Each number in the table is a channel. There are 600 channels ranging from number 0 to 599.</p> <p>The color of each channel tells you something about whether the channel is being used or not.</p> <p>Channel Colors</p> <p>Red = Channel registered and in use.</p> <p>Yellow = Probably in use (but not registered).</p> <p>White = Available for registration and use.</p> <p>Hovering your mouse over each channel reveals details about that channel in the box below the map.</p> <p></p>"},{"location":"channelmap/help/#schedule","title":"Schedule","text":"<p>The channel informs your tracker when to transmit.</p> <p>Tracker message sending schedule</p> <p>Every 10 minutes, the tracker sends two messages: Regular and Telemetry.</p> <p>The Regular message is sent first. The Telemetry message is sent second.</p> <p>Each message starts at a 2 minute boundary.</p> start minute + 2 min + 4 min + 6 min + 8 min Regular Telemetry - - - <p>The start minute is indicated by the Channel Map.</p> <p>Finding the schedule for channel 589</p> <p>On the Channel Map:</p> <ul> <li>Find channel 589</li> <li>Follow the row 589 is on until you intersect with the column labeled <code>min</code>.</li> <li>This is the start minute that the Regular message will be sent on</li> </ul> <p></p> <p>For channel 589:</p> <ul> <li>Start Minute = 6, so:<ul> <li>The Regular message is sent at 12:06, 12:16, 12:26, ...</li> <li>The Telemetry message is sent at 12:08, 12:18, 12:28, ...</li> </ul> </li> </ul> <p>Warning</p> <p>You can only use one channel at a time with the same start minute.</p> <p>That means a maximum of 5 flights simultaneously, each with a different channel and different minute.</p> <p>This applies to flights using the same callsign on the same band.</p>"},{"location":"channelmap/help/#frequency","title":"Frequency","text":"<p>There is a frequency column</p> <p>The channel you select is also associated with a given transmission frequency.</p> <p>This differentiates channels with the same start minute value.</p>"},{"location":"channelmap/help/#other-channel-map-columns","title":"Other Channel Map Columns","text":"<p>There are many other columns</p> <p>The top row of the Channel Map has columns ranging from <code>00</code> through <code>Q9</code>.</p> <p>These are unique identifiers that get embedded in the Telemetry data your tracker sends to uniquely identify it as yours.</p>"},{"location":"channelmap/help/#band","title":"Band","text":"<p>There is a Channel Map per-WSPR band</p> <p></p> <p>You can select between all the different WSPR bands (eg 20m, 10m, etc).</p> <p>Channels on band 20m do not conflict with any other band (eg 10m)!</p>"},{"location":"channelmap/help/#registering-a-channel","title":"Registering a Channel","text":"<p>It is encouraged to register the channel you want to use for your flight. You should select an available channel to register.</p> <p>You can register your flight in advance of your launch, or on the day of.</p> <p>Once you have identified an available channel, you will want to register it on the LU7AA website. </p> <p>How to fill out the registration fields</p> <ul> <li>Callsign - Your callsign</li> <li>Band - probably 20m, but make sure it's the same as what you chose on the Channel Map</li> <li>Balloon-ID - Ignore</li> <li>Time-Slot - Ignore</li> <li>Detail - Ignore</li> <li>Launch - The time of the launch, in UTC</li> <li>SSID - Ignore</li> <li>Tracker - The name of the tracker you are flying, eg <code>traquito</code> if using the Traquito Jetpack tracker</li> <li>QRP-ID - The channel number you have selected</li> </ul> <p>Then click the blue button to submit.</p> <p>Once you have registered your channel, the Channel Map will show that channel highlighted in red.</p> <p>You will also be able to click the \"Spot Search\" link to track your balloon once you launch it.</p> <p></p>"},{"location":"faq/","title":"FAQ","text":"<ul> <li> <p> About </p> </li> <li> <p> Big Idea </p> </li> <li> <p> WSPR Site Relationships </p> </li> <li> <p> Buying Balloons </p> </li> <li> <p> Ordering from JLCPCB </p> </li> <li> <p> Setup WSPR Reception </p> </li> <li> <p> Contact </p> </li> </ul>"},{"location":"faq/about/","title":"About","text":""},{"location":"faq/about/#mission","title":"Mission","text":"<p>This site, tracker, and utilities were created as a way to give back to the pico balloon community, as well as expand STEM teaching/learning opportunities for future generations to benefit from.</p> <p>The hope is that more people are inspired to take up an interest in engineering and the sciences and find their own ways to be creative and share their experiences with others.</p> <p>Everyone is welcome!</p> <p>See the Big Idea page to get started.</p>"},{"location":"faq/about/#usage-policy","title":"Usage Policy","text":"<p>Following from the mission, this site, tracker, and utilities may not be used in for-profit activities.  Volunteer only.</p> <p>It is acceptable to recoup financial expenses you incur (eg purchase price of the tracker, shipping costs to send the tracker somewhere, etc).</p> <p>Time spent assembling/preparing the tracker, teaching others, etc, is not acceptable to charge for.</p> <p>Basically, if you're profiting while making use of resources from this site, this is not acceptable use.</p>"},{"location":"faq/about/#history","title":"History","text":"<p>The https://picoballoons.com site was the first version of a webpage to keep track of flights my father and I did together.</p> <p>As time went on, the progress on making trackers and mapping utilities made more sense to have a dedicated project associated with them, hence Traquito.</p> <p>The Traquito name is a combination of the word \"tracker,\" (the pico balloon computer), and the Spanish diminutive suffix \"ito,\" meaning small.  Small tracker -- get it??  \ud83d\ude01</p> <p>Am I Spanish?  Nope!  I just liked how it sounded!</p>"},{"location":"faq/balloons/buying/","title":"Buying Balloons","text":""},{"location":"faq/balloons/buying/#what-balloons-to-buy-for-pico-ballooning","title":"What balloons to buy for Pico Ballooning?","text":"<p>This document is about buying Yokohama balloons from Japan.</p> <p>They have a great track record, at a cost. Other alternatives exist, but this document is only about Yokohama.</p>"},{"location":"faq/balloons/buying/#buying-yokohama-balloons","title":"Buying Yokohama Balloons","text":"<p>Ordering is 10 balloons (minimum order quantity).</p> <p>You have two options for purchase</p> <ol> <li>Medium-fast and most expensive (4 days, $250)<ul> <li>Buy direct from Yokohama</li> </ul> </li> <li>Medium-slow and less expensive (18 days, $209)<ul> <li>Buy through a forwarding service (save money on shipping)</li> </ul> </li> </ol> <p>If you want the forwarding service, see below.</p>"},{"location":"faq/balloons/buying/#using-tenso-to-buy-yokohama-balloons","title":"Using Tenso to buy Yokohama balloons","text":"<p>Tenso is a forwarding service.</p> <p></p>"},{"location":"faq/balloons/buying/#1-open-an-account-with-tenso","title":"1. Open an account with Tenso","text":"<p>Go to tenso.com, click the button \"Sign up\".</p> <p>Provide your email address, you will receive a registration link in your email - follow that link.</p> <p>Provide your proof of identification, method of payment, and your address.                </p>"},{"location":"faq/balloons/buying/#2-receive-a-tenso-address","title":"2. Receive a Tenso \"address\"","text":"<p>Tenso receives packages from lots of places, for lots of people.</p> <p>They only know a package is for you if it's addressed to them, with a special identifier for you only.</p> <p>That is the Tenso \"address.\"</p> <p>Example of a Tenso address</p> <p>Address: \u3012120-0023</p> <p>\u6771\u4eac\u90fd\u8db3\u7acb\u533a\u5343\u4f4f\u66d9\u753a42-4 TSxxxxxxx\u8ee2\u9001\u30b3\u30e0</p> <p>Phone: 03-5739-3341</p> <p>Once you sign up with Tenso, you will receive a \"Registration Completed\" email, it will include your Tenso address.</p> <p>The address is partly in Japanese, partly in English, use Google Translate for English.</p> <p>A \"TS\" number will be part of the address, that is how Tenso identifies you.</p>"},{"location":"faq/balloons/buying/#3-purchase-balloons-from-yokohama","title":"3. Purchase balloons from Yokohama","text":"<p>Go to the Yokohama website and purchase your 32 inch clear balloons.  </p> <p>You will pay for the balloons, the tax, and the domestic shipping.</p> <p>Use the Tenso provided phone number.</p> <p>Use your name and your Tenso address. </p> <p>Tenso includes examples of how to populate the address.</p> <p>Tenso address filled out</p> <p></p>"},{"location":"faq/balloons/buying/#4-yokohama-ships-to-tenso","title":"4. Yokohama ships to Tenso","text":"<p>Yokohama sends you an email saying they have shipped to the address you provided.</p>"},{"location":"faq/balloons/buying/#5-tenso-receives-the-package","title":"5. Tenso Receives the package","text":"<p>Tenso identifies you from the TS number.</p> <p>Tenso checks the items (there are boxes, packages &amp; items).</p>"},{"location":"faq/balloons/buying/#6-tenso-confirms-shipping-details","title":"6. Tenso confirms shipping details","text":"<p>Tenso emails you to confirm it is your merchandise.</p> <p>You declare the value in JPY - it cannot be zero</p> <p>Tenso asks you to select a shipper.</p> <p>You select the shipper with help from the shipping calculator.</p> <p>Example</p> <p>For a box of ten balloons I used 1.5 pounds and a box size of 23\u201d x 6.5\u201d x 4.5\u201d</p> <p>You pay at this point.</p>"},{"location":"faq/balloons/buying/#7-tenso-ships-to-you","title":"7. Tenso ships to you","text":"<p>Tenso emails you to confirm the package has been shipped, with a tracking number.</p> <p>My first experience</p> <p>May 2, 2023         I ordered balloons from Yokohama, balloons $150, tax $15, shipping $7.27.</p> <p>May 12, 2023        Tenso receives the balloons.</p> <p>May 13, 2023        I selected \u201cAIR/International Parcel\u201d as the shipper, $36.48.</p> <p>May 20, 2023        I received the balloons, enjoying a savings of $56.25 from the original $100.</p>"},{"location":"faq/bigidea/","title":"Big Idea","text":""},{"location":"faq/bigidea/#pico-balloons","title":"Pico Balloons","text":"<p>This site is all about flying Pico Balloons as a hobby or as a school STEM activity.</p> <p>Pico Balloons is shorthand for attaching a small computer to a balloon, releasing it, and tracking the balloon as it flies with the wind, ideally around the world!</p> <p></p> <p>Many people have succeeded at circling the Earth once, some many times!</p> <p>A lot of the fun comes from tracking your flight and exploring new ideas about how to improve your next flight based on what did or didn't work from your prior flight.</p>"},{"location":"faq/bigidea/#who-does-this","title":"Who does this?","text":"<p>The people involved in the hobby tend to have an interest in some kind of technical area, frequently computers, electronics, or wireless (radio) systems.</p> <p>Everyone involved has a HAM Radio License.</p> <p>The HAM Radio License, granted to you by the FCC (after taking a test), gives you the right to send wireless radio transmissions.  The wireless radio transmissions are how the balloon computer (a tracker) tells you its location as it flies around.</p>"},{"location":"faq/bigidea/#how-its-done","title":"How it's done","text":"<p>Once licensed, you're able to fly.</p> <p>Flying involves constructing a Pico Balloon, involving</p> <ul> <li>A balloon</li> <li>A tracker (small computer)</li> <li>Solar panel (to power it over long durations)</li> </ul> <p>Once the Pico Balloon is ready to go, you:</p> <ul> <li>Select a channel</li> <li>Configure the tracker</li> <li>Launch it</li> <li>Track it</li> </ul>"},{"location":"faq/bigidea/#things-people-focus-on","title":"Things people focus on","text":"<p>Because the balloon flies around without control, avoiding bad weather is a big task.</p> <p>To do that, flights tend to try to reach high altitudes (around 40,000 feet / 12,000 meters) in the hopes of simply flying above the storms.  Reaching higher altitudes means 1) bigger balloons and 2) lighter trackers.</p> <p>So people like making smaller and lighter trackers, as well as trying out different solar panel configurations to see what gets them the best performance.</p> <p>There are many aspects beyond this as well.  Join the forum and find out what appeals to you!</p>"},{"location":"faq/bigidea/#how-do-i-get-involved","title":"How do I get involved?","text":"<p>Read the About page to learn about the online forum, sign up to the forum, read some posts, and make some posts of your own!</p> <p>Browse the other pages on this site.</p> <p>Read about pico balloons on the internet or https://picoballoons.com.</p>"},{"location":"faq/contact/","title":"Contact","text":""},{"location":"faq/contact/#using-the-forum","title":"Using the Forum","text":"<p>Your best bet is to sign up to the https://groups.io/g/picoballoon forum where many experienced and enthusiastic people chat and share their experiences flying pico balloons, experimenting, and overcoming challenges.</p>"},{"location":"faq/contact/#jetpack-tracker-questions","title":"Jetpack Tracker Questions","text":"<p>Please post on the Traquito Jetpack thread.</p>"},{"location":"faq/contact/#solar-system-questions","title":"Solar System Questions","text":"<p>Please post on the Traquito Solar System thread.</p>"},{"location":"faq/contact/#webpage-questions-including-tracking","title":"Webpage Questions (including tracking)","text":"<p>Please post on the Traquito Web thread.</p>"},{"location":"faq/contact/#telemetry","title":"Telemetry","text":"<p>Please post on the Telemetry Steering Committee thread.</p>"},{"location":"faq/contact/#general-questions","title":"General Questions","text":"<p>For all other questions, please create a new topic on the forum and folks will surely help!</p> <p>I think everyone benefits from open communication so the forum is really the best place to discuss!</p>"},{"location":"faq/jlcpcb/","title":"Ordering from JLCPCB Instructions","text":""},{"location":"faq/jlcpcb/#ordering-from-jlcpcb","title":"Ordering from JLCPCB","text":"<p>jlcpcb.com fabricates PCBs and assembles them as well, meaning they can produce a fully-populated PCB, shipped directly to you.</p> <p>The Traquito Jetpack tracker Add-on Module is available to you directly through this service.</p> <p>There are 3 files you will need to provide to JLCPCB during the ordering process.  You don't need to know anything about these files, just submit them and JLCPCB will take care of the rest.</p> <p>A walkthrough of how to order is presented below.</p> <p>The set of files used for ordering</p> <ul> <li>BOM (\"bill of materials\" aka list of parts)</li> <li>CPL part placement file (describes where each component should be placed/soldered on the PCB)</li> <li>Gerber files in a .zip (describes the PCB itself - track location, shape of board, etc)</li> </ul> <p>Warning</p> <p>The steps below should \"just work.\"</p> <p>If you find yourself having to do something unexpected to \"get it to work\" then something is probably wrong.  Please reach out for help!</p> <p>Tip</p> <p>Make sure you have an account created, and that you're logged in, before beginning.</p> <p>Note</p> <p>Also, note that JLCPCB sometimes shows the PCB outline as a rectangle, depending on a bug on their side.</p> <p>The order is fine, though, this is known and you can continue.</p> <p></p>"},{"location":"faq/jlcpcb/#step-1","title":"Step 1","text":"<p>jlcpcb.com</p> <p>Drag the gerber zip file onto the circled target on the JLCPCB site.</p> <p></p>"},{"location":"faq/jlcpcb/#step-2","title":"Step 2","text":"<p>This page appears and is mostly defaulted correctly.</p> <p>You only need to change the parts highlighted in red.</p> <p></p>"},{"location":"faq/jlcpcb/#step-3","title":"Step 3","text":"<p>Click Next.</p> <p></p>"},{"location":"faq/jlcpcb/#step-4","title":"Step 4","text":"<p>Provide the BOM and placement files.</p> <p></p> <p>Click to continue when ready.</p> <p></p>"},{"location":"faq/jlcpcb/#step-5","title":"Step 5","text":"<p>Click Next.</p> <p></p> <p>It is possible one or more parts are out of inventory (a \"shortfall\").</p> <p>You can preorder parts for next time if there is a shortfall</p> <p>Click here to learn how to preorder parts (no additional cost) to overcome this.</p> <p>You can also just check back later and hope there is more parts in the JLCPCB inventory.</p> <p></p>"},{"location":"faq/jlcpcb/#step-6","title":"Step 6","text":"<p>Click Next.</p> <p></p>"},{"location":"faq/jlcpcb/#step-7","title":"Step 7","text":"<p>You need to declare what type of board this is -- it's DIY.</p> <p>Save to cart when done.</p> <p></p>"},{"location":"faq/jlcpcb/#step-8","title":"Step 8","text":"<p>Time to check out</p> <p></p>"},{"location":"faq/jlcpcb/#step-9","title":"Step 9","text":"<p>The rest of the process is straightforward payment and shipping address setup.</p> <p>A note about shipping methods -- they all basically cost the same (around $20).</p> <p>The exception the \"Global Standard Direct Line,\" which I have never used before.</p> <p>DHL has done a great job every time.</p> <p>I recommend just picking a typical carrier.</p> <p></p>"},{"location":"faq/jlcpcb/#re-ordering-in-the-future","title":"Re-Ordering in the future","text":"<p>In the future, if you want to order additional Add-on Modules, you can, without going through the whole process again.</p> <p>Instead, first, go to the order history page</p> <p></p> <p>Then, find the last order, and click Reorder to begin the process.</p> <p></p>"},{"location":"faq/jlcpcb/preorder/","title":"Pre-Ordering Parts from JLCPCB","text":""},{"location":"faq/jlcpcb/preorder/#overview","title":"Overview","text":"<p>During the process of ordering an assembled PCB from JLCPCB, it is possible that one or more parts specified in the BOM is not in stock.</p> <p>If that is the case, you won't be able to complete your order at that time.</p> <p></p> <p>You can \"pre-order\" the parts, at no additional cost, and they are is kept in your private inventory until you order boards which use those parts.</p> <p>If you do pre-order the parts, you need to wait for them to be made available at JLCPCB (they will email you to let you know).  After that, you can order the board again and JLCPCB will use your private inventory to fulfill that part.</p>"},{"location":"faq/jlcpcb/preorder/#step-1","title":"Step 1","text":"<p>Click the part with the shortfall and copy the part number.</p> <p></p>"},{"location":"faq/jlcpcb/preorder/#step-2","title":"Step 2","text":"<p>Search for the part in the JLCPCB parts library.</p> <p></p>"},{"location":"faq/jlcpcb/preorder/#step-3","title":"Step 3","text":"<p>Do this.</p> <p></p> <p>You will see a popup saying the part has been added to your part cart.</p> <p></p>"},{"location":"faq/jlcpcb/preorder/#step-4","title":"Step 4","text":"<p>Go to your Parts Manager to check out.</p> <p>Order parts.  You pay now based on the estimated price.</p> <p>You will later get an email with the exact price, and a refund of any difference.</p> <p>Once JLCPCB has confirmed you have your parts available, you can order the board you tried to before again, and your private inventory will be used for that missing part.</p> <p></p>"},{"location":"faq/jlcpcb/preorder/#next-time-you-order","title":"Next time you order","text":"<p>Next time you order, you will see the parts come from your inventory and have no additional cost.</p> <p></p>"},{"location":"faq/receiving/","title":"Receiving WSPR Messages","text":""},{"location":"faq/receiving/#receiving-wspr-messages_1","title":"Receiving WSPR Messages","text":"<p>Whether for testing your tracker, or just the fun of receiving WSPR messages, this guide will get you set up.</p> <p>WSPR Setup Guide</p>"},{"location":"faq/sites/","title":"WSPR Site Relationships","text":""},{"location":"faq/sites/#data-flow","title":"Data Flow","text":"<p>There are a number of different websites that have WSPR data presented on them.</p> <p>The diagram below clarifies the flow of information from the root database of all WSPR data (wsprnet), to how it is presented on some of those sites, and the relationships between the sites.</p> <p>The Traquito website uses data in two ways</p> <ul> <li>ChannelMap looks for channel researvations from qrp-labs and lu7aa, and overlays observed spots from wspr.rocks</li> <li>Spot Search (maps, graphs, data table) uses data from wspr.rocks</li> </ul> <p>The image below is best effort (ie not a comprehensive nor authoritative list).</p> <p>Click to enlarge.            </p> <p> </p> <p>Site links</p> <ul> <li>https://www.wsprnet.org/drupal/</li> <li>https://wspr.live/, http://wspr.rocks/</li> <li>https://qrp-labs.com/</li> <li>http://lu7aa.org/wsprset.asp</li> <li>https://www.aprs-is.net/</li> <li>https://aprs.fi/</li> <li>https://amateur.sondehub.org/</li> </ul>"},{"location":"pro/","title":"Pro Tools","text":"<ul> <li> <p> Decode </p> </li> <li> <p> Query </p> </li> <li> <p> API Mode </p> </li> <li> <p> Tracker Hacker </p> </li> <li> <p> WSPR Telemetry </p> </li> </ul>"},{"location":"pro/apimode/","title":"API Mode","text":""},{"location":"pro/apimode/#api-mode-overview","title":"API Mode Overview","text":"<p>The Jetpack tracker is designed to run software that handles configuration and flight. That software switches between those modes without user intervention.</p> <p>API Mode works differently than this.</p> <p>Uses cases for API Mode</p> <ul> <li>Testing the GPS in various situations</li> <li>Standalone dedicated WSPR transmitter</li> <li>Anything else where users want to control what happens instead of the software</li> </ul> <p>If the above applies to you, read on.</p> <p>This software IS NOT suitable for use as a pico balloon tracker.</p> <p>It is only meant to be used when operating the Jetpack hardware by remote control (via API).</p> <p>This software will not enter Configuration Mode or Flight Mode like the tracker software.</p> <p>API Mode behavior</p> <ul> <li>The program takes no action on its own, it is idle</li> <li>The radio is defaulted to being turned off</li> <li>The GPS is default enabled, and all NMEA sentences are default enabled</li> <li>The program will respond to JSON API messages</li> </ul>"},{"location":"pro/apimode/#api-mode-software-downloads","title":"API Mode Software Downloads","text":"Tracker Software Description TraquitoJetpackAPIMode.2023-07-07.uf2 Released 2023-07-07 TraquitoJetpackAPIMode.2023-07-10.uf2 Released 2023-07-10 TraquitoJetpackAPIMode.2023-07-11.uf2 Released 2023-07-11"},{"location":"pro/apimode/#api-documentation","title":"API Documentation","text":"<p>API Documentation</p>"},{"location":"pro/apimode/#demonstration-of-api-mode","title":"Demonstration of API Mode:","text":"<ul> <li>GPS Lock Tester - Repeatedly lock and re-lock indefinitely, showing durations</li> </ul>"},{"location":"pro/apimode/#projects-using-api-mode","title":"Projects using API Mode:","text":"<ul> <li>NMEA2TCP - Lets you use u-blox u-center with Traquito in API Mode</li> </ul>"},{"location":"pro/apimode/gps/","title":"API Mode - GPS Test","text":"Tracker Connection Connect Disconnect                 Status Disconnected <pre>\nThis demonstration of the API mode functionality allows you to start/stop an\nautomatic sequence of timed GPS locks by the device.\n\nThe steps taken are:\n- Take the selected action to start each lock duration test\n- Wait for a 3D lock\n- Update list of recorded durations\n\nThis process repeats indefinitely until you click stop.\n\nNew values are added to the end of the list of prior measurements if you start again.\nYou can start a new set of measurements with the Clear Data button.\n</pre>          Action to start each lock duration test: Cold Reset Warm Reset Hot Reset Power Off, Battery On (this is normal flight behavior) Power Off, Battery Off Start GPS Test Stop GPS Test Clear Data           Test Status:            3D Lock Duration Results (secs):"},{"location":"pro/decode/","title":"Decode/Encode Basic Telemetry","text":"Decode: call, grid, power           1Y4PAS HK08 10 QX7DGS JQ97 33 0X2FDM MI65 27   ClicktoDecode Field Definitions          id13 - The two characters of the column your channel is in.          See Message Fields for details on other fields.              Encode: id13, 6-char maidenhead, altitudeMeters, tempC, voltage, speedKnots, gpsValid           14 FN20XR 1000 -12 4.95  0 1 Q7 FN20WR 3000   0 3.18 10 0 02 FN20WS 7000  13 3.00 60 1   ClicktoEncode Restore Defaults"},{"location":"pro/query/","title":"Query wspr.live","text":"select     round(avg(frequency)) as freqAvg   , substring(tx_sign, 1, 1) as id1   , substring(tx_sign, 3, 1) as id3   , (freqAvg - 14097000) as freqOffset   , (freqOffset / 40) as freqToBand   , toInt8((freqAvg - 14097000) / 40) + 1 as freqBand   , if(freqBand &lt;= 2, freqBand, freqBand - 1) as freqBandDisp   , toMinute(time) % 10 as min   , count(*) as count  from wspr.rx  where       time between '2023-03-13 00:00:00' and '2023-04-12 00:00:00'   and band = 14   and match(tx_sign,'^[01Q].[0-9]') = 1  group by (id1, id3, min) order by (id1, id3, freqBand, min)    query          Result table:          (download) or         (copy to clipboard) Inspired by http://wspr.rocks/livequeries/ Database Fields Clickhouse Database Field Types"},{"location":"pro/telemetry/","title":"WSPR Telemetry","text":""},{"location":"pro/telemetry/#overview","title":"Overview","text":"<p>Trackers are able to send a useful amount of telemetry data despite the extremely minimal data-transfer abilities of the WSPR protocol.</p> <p>This is accomplished by disguising the telemetry data as other types of data. This process is Encoding.</p> <p>This page sets out to cover the basics of Encoding.</p> <p>Subsequent sub-pages go into specifics of encoding in more detail.</p>"},{"location":"pro/telemetry/#transmission-problem","title":"Transmission Problem","text":"<p>The WSPR protocol defines only 3 message types, amounting to 50 bits of data each</p> <ul> <li>Type 1: &lt;callsign&gt; &lt;grid&gt; &lt;power&gt;</li> <li>Type 2: &lt;callsign_long&gt; &lt;power&gt;</li> <li>Type 3: &lt;callsign_hash&gt; &lt;grid_long&gt; &lt;power&gt;</li> </ul> <p>These messages do not directly support arbitrary telemetry transfer.</p>"},{"location":"pro/telemetry/#solution-encoding","title":"Solution - Encoding","text":"<p>Encoding is the process of taking telemetry, eg Altitude, and changing it into a form which can be transmitted through the WSPR protocol.</p> <p>The encoded data is then sent as a WSPR Message, received, and Decoded, which results in the receiver acquiring the previously-encoded telemetry.</p> <p>For technical reasons, the WSPR Type 1 message is used for this purpose.</p>"},{"location":"pro/telemetry/#telemetry-encoding-process","title":"Telemetry Encoding Process","text":"<p>The specific encoding/decoding technique relies on multiple different techniques, applied sequentially.</p> <p>The encoded data can decoded by performing reverse of those operations in the opposite sequence.</p> <p>The subsections below walk through the encoding stages and notes how the reverse operation would be performed.</p> <p>The processes described below only introduce the techniques applied in encoding, and do not spell out the precise technical specifics required to encode or decode a specific message.</p>"},{"location":"pro/telemetry/#measurement-compaction-stage","title":"Measurement Compaction Stage","text":"<p>In what ways are measurements of Altitude and Voltage the same as one another?</p> <p>They both have:</p> <ul> <li>Units</li> <li>Measurement resolution</li> <li>Ranges you can expect to measure within</li> </ul> <p>Altitude measurement definition example</p> <p>Let's define measuring Altitude to be deciding:</p> <ul> <li>Units = Meters</li> <li>Resolution = 20m</li> <li>Range = 0 to 100m</li> </ul> <p>With this definition, you know you have <code>6</code> possible measurements <code>(0, 20, 40, 60, 80, 100)</code>.</p> <p>Everything that follows using the Altitude example could be performed using Voltage, or any other measurement defined in the same terms.</p> <p>Compaction example</p> <p>The computer representation of the Altitude value <code>100</code> takes 7 bits.</p> <p>Consider instead using an <code>index</code> into that list of possible measurements:</p> value <code>0</code> <code>20</code> <code>40</code> <code>60</code> <code>80</code> <code>100</code> index <code>0</code> <code>1</code> <code>2</code> <code>3</code> <code>4</code> <code>5</code> <p>By transmitting instead the <code>index</code>, now the highest value you would need to transmit is <code>5</code>, taking 3 bits.</p> <p>7 bits to 3 bits is a good savings.</p> <p>The reverse of the above, for decoding a value, is hopefully clear.</p>"},{"location":"pro/telemetry/#conversion-to-big-number-stage","title":"Conversion to <code>big number</code> Stage","text":"<p>The following packing operation saves bit space at the expense of complexity.</p> <p>In essence, this allows you to use a decimal number of bits (eg 2.58 bits) instead of a whole number of bits (eg 3 bits) for number storage.</p> <p>Whole bits vs decimal bits</p> <p>Consider our Altitude measurement again.</p> <p>Our Altitude <code>index</code> range is <code>0-5</code> (6 values).</p> <p>In a typical computer storage system, we need to allocate 3 bits of storage space to that number to easily store and retrieve any value in the range of <code>0-5</code>.</p> <p>However, 3 bits can actually store a range of values between <code>0-7</code> (8 values).</p> <p>That means we are underutilizing the capacity of the 3 bits. In fact, we're underutilizing it by 25%. This is very wasteful.</p> <p>The packing operation below allows us to use 2.58 bits to store the number range <code>0-5</code> instead, which is exactly the amount required.</p> <p>The packing approach saves when multiple values are packed, not just a single value. The space savings is the accumulation of savings by (say) the 2nd value sharing some of the original 3 bit bitspace of the 1st value, and so on, across all values.</p> <p>Packing values into a <code>big number</code>, and restoring them after</p> <p>Let's say there are two <code>index</code> numbers, A and B.</p> <p>A has a range of <code>0-20</code> (range of 21 values), and a value of 15. B has a range of <code>0-6</code> (range of 7 values), and a value of 4.</p> <p>Can we combine them into a single number C? (yes)</p> <p>C = 0</p> <p>C = C * 21  // multiply by # of values A can take C = C + A   // add A</p> <p>C = C * 7   // multiply by # of values B can take C = C + B   // add B</p> <p>C now equals 109.</p> <p>If we only have C, have we lost the values of A and B? (no). We can get them back if we know:</p> <ul> <li>The range of values of A and B</li> <li>The order that we combined A and B together</li> </ul> <p>Let's extract A's value into AA and B's value into BB to demonstrate it. But we have to do the operations in reverse.</p> <p>BB = C % 7 // get the remainder after dividing by # of values B can take C = C / 7  // divide away from C the # of values B can take</p> <p>AA = C % 20 // get the remainder after dividing by # of values A can take C = C / 20  // divide away from C the # of values A can take</p> <p>AA now equals A (which is 15). BB now equals B (which is 4).</p> <p>You can give A and B any value in their range and this process will work.</p> <p>The above allows you to combine any arbitrary number of values, of different ranges, into a single <code>big number</code>.</p>"},{"location":"pro/telemetry/#converting-the-big-number-into-a-wspr-message-stage","title":"Converting the <code>big number</code> into a WSPR Message Stage","text":""},{"location":"pro/telemetry/#type-1-message-format","title":"Type 1 Message Format","text":"<p>To encode our telemetry into a WSPR message, we first need to look at our target message format.</p> <p>WSPR Type 1 Message Format</p> Type 1 Field Legal Values # Values Callsign 1 0,1,Q 3 Callsign 2 0-9,A-Z 36 Callsign 3 0-9 10 Callsign 4 A-Z,space 27 Callsign 5 A-Z,space 27 Callsign 6 A-Z,space 27 Grid 1 A-R 18 Grid 2 A-R 18 Grid 3 0-9 10 Grid 4 0-9 10 Power ... 19"},{"location":"pro/telemetry/#converting-to-wspr-message","title":"Converting to WSPR Message","text":"<p>We saw above that our <code>big number</code> C (value 109) was able to be restored back into A and B's original values. This was done by knowing the original range of values of A and B.</p> <p>If we can encode our <code>big number</code> C into a WSPR message, and send it, the receiver should be able to extract the <code>big number</code> C, and then restore A and B's values, completing the encoded transfer.</p> <p>Converting the <code>big number</code> into a WSPR message</p> <p>Note WSPR Type 1 fields <code>Grid 2</code> with range of <code>A-R</code> (18 values) and <code>Grid 3</code> with range of <code>0-9</code> (10 values).</p> <p>We will spread the <code>big number</code> C value of 109, across <code>Grid 2</code> and <code>Grid 3</code>'s legal values (in a way where the values of the input A and B are preserved).</p> <p>By knowing the range of <code>Grid 2</code> and <code>Grid 3</code> we can map to them. G2 is short for <code>Grid 2</code> and G3 is short for <code>Grid 3</code>.</p> <p>G2 = C % 18 // get the remainder after dividing by # of values <code>Grid 2</code> can take C = C / 18 // divide away from C the # of values <code>Grid 2</code> can take</p> <p>G3 = C % 10 // get the remainder after dividing by # of values <code>Grid 3</code> can take C = C / 10 // divide away from C the # of values <code>Grid 3</code> can take</p> <p>G2 and G3 now are index values into their range of values. G2 now equals 1 (letter <code>B</code>) G3 now equals 6 (number <code>6</code>).</p> <p>If we only have the WSPR Message fields <code>Grid 2</code> and <code>Grid 3</code>, can we restore the value of C? (yes)</p> <p>Let's extract <code>Grid 2</code> and <code>Grid 3</code>'s values into CC to demonstrate it.</p> <p>This is performed in the mathematically reverse order of the operations to get here.</p> <p>CC = 0</p> <p>CC = CC * 10    // multiply by the number of values <code>Grid 3</code> can take CC = CC + G3    // add the <code>Grid 2</code> value</p> <p>CC = CC * 18    // multiply by the number of values <code>Grid 2</code> can take CC = CC + G2    // add the <code>Grid 3</code> value</p> <p>CC now equals C (which is 109). We have recovered our <code>big number</code>, which means A and B can be restored (decoded) as well.</p>"},{"location":"pro/telemetry/#telemetry-encoding-sequence","title":"Telemetry Encoding Sequence","text":"<pre><code>graph LR\n\nMeasure[Telemetry&lt;br/&gt;Measurements] --&gt; MC[Measurement&lt;br/&gt;Compaction]\nMC --&gt; BN[Big&lt;br/&gt;Number]\nBN --&gt; WSPR[Convert&lt;br/&gt;to WSPR]\nWSPR --&gt; Send</code></pre>"},{"location":"pro/telemetry/#telemetry-decoding-sequence","title":"Telemetry Decoding Sequence","text":"<pre><code>graph RL\n\nReceive --&gt; WSPR[Have&lt;br/&gt;WSPR]\nWSPR --&gt; BN[Big&lt;br/&gt;Number]\nBN --&gt; MC[Measurement&lt;br/&gt;Compaction]\nMC --&gt; Measure[Telemetry&lt;br/&gt;Measurements]</code></pre>"},{"location":"pro/telemetry/#shared-knowledge","title":"Shared Knowledge","text":"<p>Both the sender and receiver of encoded data must know the particular details of the encoding scheme in order for the encoded data to be decoded.</p> <p>These details are specified in following sections.</p>"},{"location":"pro/telemetry/basic/","title":"Basic Telemetry","text":""},{"location":"pro/telemetry/basic/#overview","title":"Overview","text":"<p>This page describes the Basic Telemetry encoded WSPR message.</p> <p>The goal is to document the encoding process and idiosyncrasies involved in processing these messages.</p>"},{"location":"pro/telemetry/basic/#message-fields","title":"Message Fields","text":"<p>Fields of Basic Telemetry</p> FieldName Unit LowValue HighValue StepSize # Values Grid5 Char 0 23 1 24 Grid6 Char 0 23 1 24 Altitude Meters 0 21,340 20 1068 Temperature Celsius -50 39 1 90 Voltage Volts 2 3.95 0.05 40 Speed Knots 0 82 2 42 IsGpsValid Bool 0 1 1 2 HdrTelemetryType Enum 0 1 1 2"},{"location":"pro/telemetry/basic/#grid5-and-grid6","title":"Grid5 and Grid6","text":"<p>Grid5 and Grid6</p> <p>These fields extend the resolution of the 4-char Grid of the WSPR Type 1 Message.</p> <p>A 4-char grid has a location resolution of 70 x 140 miles. A 6-char grid has a location resolution of 3 x 3 miles.</p> <p>By appending the 2 additional grid characters to the 4-char grid from the Type 1 message, you form a 6-char grid.</p> <p>Their values encode the range <code>A-X</code>.</p>"},{"location":"pro/telemetry/basic/#altitude","title":"Altitude","text":"<p>Altitude</p> <p>Typically determined through a GPS lock.</p> <p>See Rollover</p>"},{"location":"pro/telemetry/basic/#temperature","title":"Temperature","text":"<p>Temperature</p> <p>See Rollover</p>"},{"location":"pro/telemetry/basic/#voltage","title":"Voltage","text":"<p>Voltage</p> <p>The measurement of the input voltage to the tracker.</p> <p>Useful for observing the performance of the (typically) solar panels powering the device.</p> <p>See Rollover</p>"},{"location":"pro/telemetry/basic/#speed","title":"Speed","text":"<p>Speed</p> <p>Typically determined through a GPS lock.</p> <p>See Rollover</p>"},{"location":"pro/telemetry/basic/#isgpsvalid","title":"IsGpsValid","text":"<p>IsGpsValid</p> <p>The Basic Telemetry message encodes values which are derived from:</p> <ul> <li>A GPS device</li> <li>Other sensors<ul> <li>ie for Voltage, Temperature</li> </ul> </li> </ul> <p>If a GPS lock is not obtained, but other measurements are, and a Basic Telemetry message is to be sent, a <code>false</code> value can be provided to indicate that the GPS-derived values in the Basic Telemetry message are not valid.</p>"},{"location":"pro/telemetry/basic/#hdrtelemetrytype","title":"HdrTelemetryType","text":"<p>HdrTelemetryType</p> <p>Specified to be the value <code>1 = Standard</code>.</p>"},{"location":"pro/telemetry/basic/#additional-encoding-details","title":"Additional Encoding Details","text":""},{"location":"pro/telemetry/basic/#callsign-characters-1-and-3","title":"Callsign Characters 1 and 3","text":"<p>Callsign characters 1 and 3 are not used for data encoding</p> <p>Basic Telemetry is encoded into the Type 1 Message Format, except for the Callsign characters 1 and 3.</p> <p>See Channels for details on use of characters 1 and 3.</p>"},{"location":"pro/telemetry/basic/#rollover","title":"Rollover","text":"<p>Rollover is specified for fields</p> <ul> <li>Altitude</li> <li>Temperature</li> <li>Voltage</li> <li>Speed</li> </ul> <p>Rollover Explained</p> <p>Take Temperature, with a range of <code>-50 - 39</code> (90 values).</p> <p>Recall that we compact that range into 90 index values in the range <code>0-89</code>.</p> <p>To calculate the index, we <code>value - -50</code>. So the index of -50 is <code>-50 - -50 = 0</code>. And the index of -45 is <code>-45 - -50 = 5</code>. And the index of 39 is <code>39 - -50 = 89</code>.</p> <p>What happens if the measured temperature exceeds 39 degrees? Say 45 degrees.</p> <p>The calculation of the index would then be <code>45 - -50 = 95</code>. However, the index value of 95 exceeds the range of index values. So Rollover says, take the modulus of the index value.</p> <p>So the Rollover index calculation is actually <code>(value - -50) % 90</code>. So, the index of 45 is <code>(45 - -50) % 90 = 5</code>.</p> <p>We see now that both -45 and 45 have an index of <code>5</code>.</p> <p>Rollover Tradeoffs</p> <p>Rollover has pros and cons.</p> <p>We saw the calculated index of temperature for both -45 and 45 = <code>5</code>.</p> <p>Pros:</p> <ul> <li>Measurements are not in fact limited to a specific range, but the entire number line.</li> </ul> <p>Cons:</p> <ul> <li>Measurements, after transmission, can not be deterministically decoded to a definite value.<ul> <li>ie Is the temperature really -45 or 45? How can you tell for certain? (you can't)</li> </ul> </li> </ul>"},{"location":"pro/telemetry/basic/#two-separate-encodes","title":"Two Separate Encodes","text":"<p>The <code>big number</code> encoding, and subsequent conversion to WSPR Message, described previously, is specified to occur twice, on different sets of telemetry, to make up the full sets of WSPR fields.</p> <p>Encode Groups</p> Telemetry WSPR Field Grid5Grid6Altitude Callsign TemperatureVoltageSpeedIsGpsValidHdrTelemetryType GridPower"},{"location":"pro/telemetry/basic/#schedule-details","title":"Schedule Details","text":"<p>See Channels for details on when it is appropriate to send this message.</p>"},{"location":"pro/telemetry/basic/#traquito-specific-behavior","title":"Traquito-specific Behavior","text":""},{"location":"pro/telemetry/basic/#field-behavior","title":"Field Behavior","text":"<p>Traquito Field Behavior</p> Field Notes Temperature Traquito uses the onboard RP2040 temperature sensor for this measurement. Voltage Traquito samples the voltage during high-load conditions (when the TX module is running) in order to get a worst-case sag value for voltage. IsGpsValid Traquito does not implement IsGpsValid=<code>false</code> functionality. Instead, a GPS lock is a requirement for sending a Basic Telemetry message, and IsGpsValid is always <code>true</code>."},{"location":"pro/telemetry/basic/#rollover-behavior-none","title":"Rollover Behavior (None)","text":"<p>Traquito clamps values and does not implement rollover.</p> <p>Example</p> <p>If the temperature exceeds the top value of 39 (say 45), Traquito clamps to 39 and transmits 39.</p> <p>This applies to upper and lower bounds.</p>"},{"location":"pro/telemetry/basic/#voltage_1","title":"Voltage","text":"<p>Traquito further modifies the behavior of the Voltage Field beyond not implementing Rollover.</p> <p>Due to rollover, the Voltage range is specified as a continuous sequence of 1.95v ranges</p> <ul> <li>2.0 volts to 3.95 volts, and</li> <li>4.0 volts to 5.95 volts, and</li> <li>6.0 volts to 7.95 volts, ...</li> </ul> <p>Traquito instead selects the voltage range of 3.0v to 4.95v and clamps to that range.</p> <p>Traquito Web also limits to this voltage range</p> <p>As a result, any tracker implementing Rollover will see their telemetry within this range.</p>"},{"location":"pro/telemetry/basic/#code","title":"Code","text":"<p>See Programming Library for implementation.</p>"},{"location":"pro/telemetry/channels/","title":"Channels","text":""},{"location":"pro/telemetry/channels/#overview","title":"Overview","text":"<p>Channels are all about finding Telemetry messages later, by causing trackers to send them in ways that make their identification possible.</p> <p>Identifying Telemetry messages means being able to associate them with Regular Type 1 messages sent at the start of the repeating 10-min window.</p> <p>See the Channel Map Help for a primer.</p>"},{"location":"pro/telemetry/channels/#unique-identification","title":"Unique Identification","text":"<p>Telemetry messages are hard to find!</p> <ul> <li>Telemetry callsign fields do not have a predictable value<ul> <li>Nor do any of the other fields in the Telemetry WSPR message (grid and power)</li> </ul> </li> </ul> <p>What you do know is sufficient given channel number specification</p> <p>For a given channel number, you know:</p> <ul> <li>The <code>id13</code> value encoded in the 1st and 3rd character of the callsign</li> <li>The time slot the Telemetry will be sent in</li> <li>The approximate frequency the Telemetry will be sent on</li> </ul>"},{"location":"pro/telemetry/channels/#callsign-characters-1-and-3","title":"Callsign Characters 1 and 3","text":"<p>Telemetry is encoded into the Type 1 Message Format, except for the Callsign characters 1 and 3.</p> <p>That is because those characters are kept reserved for putting in unique data, the <code>id13</code> value, specified in the Channel Map.</p> <p>The <code>id13</code> value are the columns <code>00</code> through <code>Q9</code> on the Channel Map, associated with a given channel.</p> <p>The <code>id13</code> value is used by splitting into two characters, then the 1st character is dropped into the Telemetry callsign character 1, and the 2nd character is dropped into the Telemetry callsign character 3.</p> <p>This differentiates Telemetry sharing a given frequency or time slot.</p> <p>Channel 248 has <code>id13</code> of <code>12</code>.</p> <p>That means the encoded callsign of the telemetry starts out blank, such as _ _ _ _ _ _</p> <p>Then the channel lookup tells us the <code>id13</code> value is <code>12</code>, so callsign becomes 1 _ 2 _ _ _</p> <p>From there, the rest of the callsign fields are encoded-into, leaving the <code>id13</code> values in place 1 ? 2 ? ? ?</p>"},{"location":"pro/telemetry/channels/#time-slot","title":"Time Slot","text":"<p>The Channel Map specifies, by channel, the minute the Telemetry should be sent on.</p> <p>This differentiates Telemetry sharing a given <code>id13</code> value.</p> <p>See the Channel Map Schedule more details.</p>"},{"location":"pro/telemetry/channels/#frequency","title":"Frequency","text":"<p>Within a given band, the Channel Map specifies, by channel, the frequency the Regular and Telemetry messages should be sent on.</p> <p>This differentiates Telemetry sharing a given <code>id13</code> value.</p> <p>Many WSPR receivers have poorly calibrated receivers</p> <p>This leads to erroneous reports of received frequency, which challenges the work of identifying Telemetry as being associated with a given Regular message.</p> <p>\"Fingerprinting\" helps overcome this issue</p> <p>Finding Regular messages for a given callsign is trivial.</p> <p>It is also trivial to find the reported frequency of that Regular message.</p> <p>Fingerprinting is the technique of looking for Telemetry messages which match the reported frequency of the Regular message, not simply the notional target frequency specified by the Channel Map (which may be mis-reported).</p>"},{"location":"pro/telemetry/code/","title":"Programming Library","text":""},{"location":"pro/telemetry/code/#overview","title":"Overview","text":"<p>This page describes the WsprEncoded C++ header-only library which implements telemetry encoding and decoding functionality.</p> <p>This is useful for writing a tracker, or other purposes.</p>"},{"location":"pro/telemetry/code/#library","title":"Library","text":"<p>The WsprEncoded library implements the functionality described in:</p> <ul> <li>WSPR Telemetry<ul> <li>Basic Telemetry</li> </ul> </li> <li>Channel Map</li> </ul> <p>The library is available in several forms</p> <ul> <li>Arduino Library via Arduino's Package Manager</li> <li>CMake integration<ul> <li>Git submodules, FetchContent, direct</li> </ul> </li> </ul> <p>The library is designed to be widely compatible</p> <ul> <li>No dynamic memory allocations (no malloc, no new)<ul> <li>No STL containers which allocate memory, either</li> </ul> </li> <li>C++11 language version, so old compilers are supported<ul> <li>Header-only implementation</li> </ul> </li> </ul>"},{"location":"pro/telemetry/code/#api-overview","title":"API Overview","text":"<p>There are two major classes</p> What Description The <code>WsprMessageTelemetryBasic</code> class Encode and Decode Basic Telemetry.(eg altitude, voltage, etc) The <code>WsprChannelMap</code> class Look up Channel Map details by band and channel.(id13, start minute, and frequency)"},{"location":"pro/telemetry/code/#api-for-basic-telemetry","title":"API for Basic Telemetry","text":""},{"location":"pro/telemetry/code/#api-guide","title":"API Guide","text":"<p>API Guide</p> <pre><code>// Setter functions return:\n// - true  when value passed is not clamped, modified, or rejected\n// - false when value passed is     clamped, modified, or rejected\n\nclass WsprMessageTelemetryBasic\n{\npublic:\n\n    /////////////////////////////////////////\n    // Setters / Getters for Telemetry\n    /////////////////////////////////////////\n\n    // 'A' through 'X' for each char\n    bool        SetGrid56(const char *grid56);\n    const char *GetGrid56() const;\n\n    // 0 through 21,340, steps of 20\n    bool        SetAltitudeMeters(int32_t altitudeMeters);\n    uint16_t    GetAltitudeMeters() const;\n\n    // -50 through 39\n    bool        SetTemperatureCelsius(int32_t temperatureCelsius);\n    int8_t      GetTemperatureCelsius() const;\n\n    // 3.0v through 4.95v, steps of 0.05v\n    bool        SetVoltageVolts(double voltageVolts);\n    double      GetVoltageVolts() const;\n\n    // 0 through 82, steps of 2\n    bool        SetSpeedKnots(int32_t speedKnots);\n    uint8_t     GetSpeedKnots() const;\n\n    bool        SetGpsIsValid(bool gpsValid);\n    bool        GetGpsIsValid() const;\n\n\n    /////////////////////////////////////////\n    // Setters / Getters for Encode / Decode\n    /////////////////////////////////////////\n\n    bool        SetCallsign(const char *callsign);\n    const char *GetCallsign() const;\n\n    // 'A' through 'X' for chars 1 and 2\n    // '0' through '9' for chars 3 and 4\n    bool        SetGrid4(const char *grid4);\n    const char *GetGrid4() const;\n\n    // 0,  3,  7, 10, 13, 17, 20, 23, 27, 30, 33, 37, 40, 43, 47, 50, 53, 57, 60\n    bool        SetPowerDbm(uint8_t powerDbm);\n    uint8_t     GetPowerDbm() const;\n\n\n    // Special Channel Map input into Encoding\n    // 00 through 09, 10 through 19, Q0 through Q9\n    bool        SetId13(const char *id13);\n    const char *GetId13() const;\n\n\n    /////////////////////////////////////////\n    // Encode / Decode\n    /////////////////////////////////////////\n\n    void Encode();\n    bool Decode();  // return true on successful decode, false otherwise\n\n\n    /////////////////////////////////////////\n    // Reset the object to initial values\n    /////////////////////////////////////////\n\n    void Reset();\n};\n</code></pre>"},{"location":"pro/telemetry/code/#encoding-example","title":"Encoding Example","text":"<p>Example minimal program</p> TestAppEncodeSimple.cpp<pre><code>#include &lt;cstdint&gt;\n#include &lt;iostream&gt;\nusing namespace std;\n\n#include \"WsprEncoded.h\"\n\n\nint main()\n{\n    // Create Basic Telemetry object\n    WsprMessageTelemetryBasic tb;\n\n    // Set telemetry fields\n    tb.SetGrid56(\"XS\");\n    tb.SetAltitudeMeters(12360);\n    tb.SetTemperatureCelsius(-28);\n    tb.SetVoltageVolts(3.35);\n    tb.SetSpeedKnots(72);\n    tb.SetGpsIsValid(true);\n\n    // Configure band and channel\n    const char *band    = \"20m\";\n    uint16_t    channel = 123;\n\n    // Get channel details\n    WsprChannelMap::ChannelDetails cd = WsprChannelMap::GetChannelDetails(band, channel);\n\n    // Encode the data\n    tb.SetId13(cd.id13);\n    tb.Encode();\n\n    // Extract the encoded WSPR fields\n    cout &lt;&lt; \"Encoded data\" &lt;&lt; endl;\n    cout &lt;&lt; \"------------\" &lt;&lt; endl;\n    cout &lt;&lt; \"Callsign: \"&lt;&lt; tb.GetCallsign()      &lt;&lt; endl;\n    cout &lt;&lt; \"Grid4   : \"&lt;&lt; tb.GetGrid4()         &lt;&lt; endl;\n    cout &lt;&lt; \"PowerDbm: \"&lt;&lt; (int)tb.GetPowerDbm() &lt;&lt; endl;\n\n    return 0;\n}\n</code></pre> <p>Output</p> <pre><code>Encoded data\n------------\nCallsign: 0Y6RLQ\nGrid4   : EI27\nPowerDbm: 33\n</code></pre>"},{"location":"pro/telemetry/code/#decoding-example","title":"Decoding Example","text":"<p>Example minimal program</p> TestAppDecodeSimple.cpp<pre><code>#include &lt;cstdint&gt;\n#include &lt;iostream&gt;\nusing namespace std;\n\n#include \"WsprEncoded.h\"\n\n\nint main()\n{\n    // Create Basic Telemetry object\n    WsprMessageTelemetryBasic tb;\n\n    // Set encoded fields\n    tb.SetCallsign(\"0Y6RLQ\");\n    tb.SetGrid4(\"EI27\");\n    tb.SetPowerDbm(33);\n\n    // Decode the data\n    tb.Decode();\n\n    // Extract the decoded telemetry\n    cout &lt;&lt; \"Decoded data\" &lt;&lt; endl;\n    cout &lt;&lt; \"------------\" &lt;&lt; endl;\n    cout &lt;&lt; \"Grid56            : \"&lt;&lt; tb.GetGrid56()                  &lt;&lt; endl;\n    cout &lt;&lt; \"AltitudeMeters    : \"&lt;&lt; tb.GetAltitudeMeters()          &lt;&lt; endl;\n    cout &lt;&lt; \"TemperatureCelsius: \"&lt;&lt; (int)tb.GetTemperatureCelsius() &lt;&lt; endl;\n    cout &lt;&lt; \"VoltageVolts      : \"&lt;&lt; tb.GetVoltageVolts()            &lt;&lt; endl;\n    cout &lt;&lt; \"SpeedKnots        : \"&lt;&lt; (int)tb.GetSpeedKnots()         &lt;&lt; endl;\n    cout &lt;&lt; \"GpsIsValid        : \"&lt;&lt; tb.GetGpsIsValid()              &lt;&lt; endl;\n\n    return 0;\n}\n</code></pre> <p>Output</p> <pre><code>Decoded data\n------------\nGrid56            : XS\nAltitudeMeters    : 12360\nTemperatureCelsius: -28\nVoltageVolts      : 3.35\nSpeedKnots        : 72\nGpsIsValid        : 1\n</code></pre>"},{"location":"pro/telemetry/code/#api-for-channel-map","title":"API for Channel Map","text":""},{"location":"pro/telemetry/code/#api-guide_1","title":"API Guide","text":"<p>API Guide</p> <pre><code>struct ChannelDetails\n{\n    char     id13[3];   // id13 column header value (null terminated c-string)\n    uint8_t  min;       // start minute (0, 2, 4, 6, 8)\n    uint32_t freq;      // target frequency, in Hz\n};\n\nclass WsprChannelMap\n{\npublic:\n\n    // For a given band and channel, get the channel details\n    static ChannelDetails GetChannelDetails(const char *band, uint16_t channel);\n};\n</code></pre>"},{"location":"pro/telemetry/code/#minimal-example-program","title":"Minimal Example Program","text":"<p>Example minimal program</p> TestAppChannelMapSimple.cpp<pre><code>#include &lt;cstdint&gt;\n#include &lt;iostream&gt;\nusing namespace std;\n\n#include \"WsprEncoded.h\"\n\n\nint main()\n{\n    // Configure band and channel\n    const char *band    = \"20m\";\n    uint16_t    channel = 123;\n\n    // Get channel details\n    WsprChannelMap::ChannelDetails cd = WsprChannelMap::GetChannelDetails(band, channel);\n\n    // Examine the details\n    cout &lt;&lt; \"Channel Details for band \" &lt;&lt; band &lt;&lt; \", channel \" &lt;&lt; channel &lt;&lt; endl;\n    cout &lt;&lt; \"id13: \" &lt;&lt; cd.id13      &lt;&lt; endl;\n    cout &lt;&lt; \"min : \" &lt;&lt; (int)cd.min  &lt;&lt; endl;\n    cout &lt;&lt; \"freq: \" &lt;&lt; cd.freq      &lt;&lt; endl;\n\n    return 0;\n}\n</code></pre> <p>Output</p> <pre><code>Channel Details for band 20m, channel 123\nid13: 06\nmin : 4\nfreq: 14097020\n</code></pre>"},{"location":"pro/telemetry/code/#arduino","title":"Arduino","text":""},{"location":"pro/telemetry/code/#platform-compatibility","title":"Platform Compatibility","text":"<p>Works on old and new IDE</p> Platform IDE 1.8.19 IDE 2.3.3 RP2040 Yes Yes Atmega328p No No <p>Atmega328p is limited by the Arduino IDE itself</p> <p>The Atmega328p can be programmed by C++20 and beyond, it is simply the compiler Arduino comes with which is the holdup.</p> <p>There are other ways to build code for Atmega328p, perhaps worth a try!</p>"},{"location":"pro/telemetry/code/#library-manager-support","title":"Library Manager Support","text":"<p>Install the library, and build its example code</p> <p></p>"},{"location":"pro/telemetry/code/#example-program","title":"Example program","text":"<p>Example program</p> WsprEncodedTest.ino<pre><code>#include \"WsprEncoded.h\"\n\n/////////////////////////////////////////////////////////////////////\n// Testing Channel Detail Lookup\n/////////////////////////////////////////////////////////////////////\n\nvoid ReportChannelDetails(const char *band, uint16_t channel)\n{\n    // Report the requested band and channel\n    Serial.print(\"[Channel details for band \");\n    Serial.print(band);\n    Serial.print(\", channel \");\n    Serial.print(channel);\n    Serial.print(\"]\");\n    Serial.println();\n\n    // Look up channel details by band and channel\n    WsprChannelMap::ChannelDetails cd = WsprChannelMap::GetChannelDetails(band, channel);\n\n    // Report the channel details for the given band and channel    \n    Serial.print(\"id1 : \"); Serial.println(cd.id1);\n    Serial.print(\"id3 : \"); Serial.println(cd.id3);\n    Serial.print(\"id13: \"); Serial.println(cd.id13);\n    Serial.print(\"min : \"); Serial.println(cd.min);\n    Serial.print(\"freq: \"); Serial.println(cd.freq);\n    Serial.println();\n}\n\nvoid TestLookupChannelDetails()\n{\n    const char *band    = \"20m\";\n    uint16_t    channel = 368;\n\n    ReportChannelDetails(band, channel);\n    Serial.println();\n}\n\n\n/////////////////////////////////////////////////////////////////////\n// Testing Message Encoding\n/////////////////////////////////////////////////////////////////////\n\nvoid ReportEncodeBasicTelemetry(const char *id13,\n                                const char *grid56,\n                                int32_t     altitudeMeters,\n                                int8_t      temperatureCelsius,\n                                double      voltageVolts,\n                                uint8_t     speedKnots,\n                                bool        gpsIsValid)\n{\n    // Create the message encoder\n    WsprMessageTelemetryBasic msg;\n\n    // Set the telemetry fields\n    msg.SetGrid56(grid56);\n    msg.SetAltitudeMeters(altitudeMeters);\n    msg.SetTemperatureCelsius(temperatureCelsius);\n    msg.SetVoltageVolts(voltageVolts);\n    msg.SetSpeedKnots(speedKnots);\n    msg.SetGpsIsValid(gpsIsValid);\n\n    // Set Encoding parameter\n    msg.SetId13(id13);\n\n    // Report the parameters passed, and if they got automatically clamped\n    Serial.println(\"Encoded WSPR BasicTelemetry Type1 Message for:\");\n    Serial.print(\"id13      : input as  : \"); Serial.println(id13);\n    Serial.print(\"          : clamped to: \"); Serial.println(msg.GetId13());\n    Serial.print(\"grid56    : input as  : \"); Serial.println(grid56);\n    Serial.print(\"          : clamped to: \"); Serial.println(msg.GetGrid56());\n    Serial.print(\"altM      : input as  : \"); Serial.println(altitudeMeters);\n    Serial.print(\"          : clamped to: \"); Serial.println(msg.GetAltitudeMeters());\n    Serial.print(\"tempC     : input as  : \"); Serial.println(temperatureCelsius);\n    Serial.print(\"          : clamped to: \"); Serial.println(msg.GetTemperatureCelsius());\n    Serial.print(\"voltage   : input as  : \"); Serial.println(voltageVolts);\n    Serial.print(\"          : clamped to: \"); Serial.println(msg.GetVoltageVolts());\n    Serial.print(\"speedKnots: input as  : \"); Serial.println(speedKnots);\n    Serial.print(\"          : clamped to: \"); Serial.println(msg.GetSpeedKnots());\n    Serial.print(\"gpsValid  : input as  : \"); Serial.println(gpsIsValid);\n    Serial.print(\"          : clamped to: \"); Serial.println(msg.GetGpsIsValid());\n    Serial.println();\n\n    // Do encoding\n    msg.Encode();\n\n    // Extract the WSPR Type1 Message fields from the encoder\n    const char *callsign = msg.GetCallsign();\n    const char *grid4    = msg.GetGrid4();\n    uint8_t     powerDbm = msg.GetPowerDbm();\n\n    // Report what the Type1 Message fields are\n    Serial.print(\"callsign: \"); Serial.println(callsign);\n    Serial.print(\"grid4   : \"); Serial.println(grid4);\n    Serial.print(\"pwrDbm  : \"); Serial.println(powerDbm);\n    Serial.println();\n\n    // Give a URL to check decoding at\n    std::string url = \"\";\n    url += \"https://traquito.github.io/pro/decode/\";\n    url += \"?decode=\";\n    url += callsign;\n    url += \"%20\";\n    url += grid4;\n    url += \"%20\";\n    url += std::to_string(powerDbm);\n    url += \"&amp;encode=\";\n\n    Serial.print(\"Check decoding at: \"); Serial.println(url.c_str());\n    Serial.println();\n}\n\nvoid TestEncodeBasicTelemetry_NonClampedValues()\n{\n    const char *id13               = \"Q5\";\n    const char *grid56             = \"JM\";\n    int32_t     altitudeMeters     = 5120;\n    int8_t      temperatureCelsius = -5;\n    double      voltageVolts       = 3.25;\n    uint8_t     speedKnots         = 25;\n    bool        gpsIsValid         = true;\n\n    Serial.println(\"[Testing Non-Clamped Encoded Values]\");\n    ReportEncodeBasicTelemetry(id13, grid56, altitudeMeters, temperatureCelsius, voltageVolts, speedKnots, gpsIsValid);\n}\n\nvoid TestEncodeBasicTelemetry_ClampedValues()\n{\n    const char *id13               = \"Q5\";\n    const char *grid56             = \"JM\";\n    int32_t     altitudeMeters     = 25000;\n    int8_t      temperatureCelsius = 45;\n    double      voltageVolts       = 5.6;\n    uint8_t     speedKnots         = 96;\n    bool        gpsIsValid         = true;\n\n    Serial.println(\"[Testing Clamped Encoded Values]\");\n    ReportEncodeBasicTelemetry(id13, grid56, altitudeMeters, temperatureCelsius, voltageVolts, speedKnots, gpsIsValid);\n}\n\nvoid TestEncodeBasicTelemetry()\n{\n    TestEncodeBasicTelemetry_NonClampedValues();\n    Serial.println();\n\n    TestEncodeBasicTelemetry_ClampedValues();\n    Serial.println();\n}\n\n\n/////////////////////////////////////////////////////////////////////\n// Setup and Loop logic\n/////////////////////////////////////////////////////////////////////\n\nvoid setup()\n{\n    Serial.begin(9600);\n}\n\nvoid loop()\n{\n    Serial.println(\"--------------\");\n    Serial.println(\"Start of tests\");\n    Serial.println(\"--------------\");\n    Serial.println();\n\n    TestLookupChannelDetails();\n    TestEncodeBasicTelemetry();\n\n    Serial.println();\n\n    delay(5000);\n}\n</code></pre> <p>Output</p> <pre><code>--------------\nStart of tests\n--------------\n\n[Channel details for band 20m, channel 368]\nid1 : 1\nid3 : 8\nid13: 18\nmin : 4\nfreq: 14097060\n\n[Testing Non-Clamped Encoded Values]\nEncoded WSPR BasicTelemetry Type1 Message for:\nid13      : input as  : Q5\n          : clamped to: Q5\ngrid56    : input as  : JM\n          : clamped to: JM\naltM      : input as  : 5120\n          : clamped to: 5120\ntempC     : input as  : -5\n          : clamped to: -5\nvoltage   : input as  : 3.25\n          : clamped to: 3.25\nspeedKnots: input as  : 25\n          : clamped to: 25\ngpsValid  : input as  : 1\n          : clamped to: 1\n\ncallsign: QD5WPK\ngrid4   : IR39\npwrDbm  : 47\n\nCheck decoding at: https://traquito.github.io/pro/decode/?decode=QD5WPK%20IR39%2047&amp;encode=\n\n\n[Testing Clamped Encoded Values]\nEncoded WSPR BasicTelemetry Type1 Message for:\nid13      : input as  : Q5\n          : clamped to: Q5\ngrid56    : input as  : JM\n          : clamped to: JM\naltM      : input as  : 25000\n          : clamped to: 21340\ntempC     : input as  : 45\n          : clamped to: 39\nvoltage   : input as  : 5.60\n          : clamped to: 4.95\nspeedKnots: input as  : 96\n          : clamped to: 82\ngpsValid  : input as  : 1\n          : clamped to: 1\n\ncallsign: QD5XUP\ngrid4   : RK54\npwrDbm  : 43\n\nCheck decoding at: https://traquito.github.io/pro/decode/?decode=QD5XUP%20RK54%2043&amp;encode=\n</code></pre>"},{"location":"pro/telemetry/code/#cmake-integration","title":"CMake Integration","text":""},{"location":"pro/telemetry/code/#using-cmake-fetchcontent","title":"Using CMake FetchContent","text":"<p>Coming soon</p>"},{"location":"pro/telemetry/code/#using-git-submodules","title":"Using Git Submodules","text":"<p>Coming soon</p>"},{"location":"pro/telemetry/code/#from-outside-your-project","title":"From Outside Your Project","text":"<p>Integrate WsprEncoded library from outside your build tree</p> <p>Reference the library from your project. (The below assumes the WsprEncoded folder is at the same directory level as your project).</p> CMakeLists.txt<pre><code>add_executable(YourExecutable main.cpp)\ntarget_link_libraries(YourExecutable libWsprEncoded)\n\nadd_subdirectory(../WsprEncoded WSPR_ENCODED)\n</code></pre>"},{"location":"pro/telemetry/extended/","title":"Extended Telemetry","text":""},{"location":"pro/telemetry/extended/#overview","title":"Overview","text":"<p>This is a proposal for the structure and behavior of Extended Telemetry</p> <p>The goal is to define an enhancement to the current scheme by:</p> <ul> <li>Retaining full backward-compatibility</li> <li>Clearly defining new features and implementation specifics</li> <li>Creating a code implementation meant to be used across trackers for common data encoding</li> <li>Being open to community development and shared investment</li> </ul> <p>Improvements with the Extended Telemetry scheme</p> <ul> <li>16 New Telemetry Message Types<ul> <li>Including user-defined</li> <li>Future growth path beyond 16 messages</li> </ul> </li> <li>Send up to 4 Extended Telemetry messages per 10-min window<ul> <li>Use of Basic Telemetry message optional</li> <li>No rigid send sequence</li> <li>No clash potential with other senders</li> </ul> </li> <li>Wider support of field ranges via use of single <code>big number</code><ul> <li>Single field size max of 29.5 bits</li> </ul> </li> <li>Defined clamping behavior</li> <li>Defined rounding behavior</li> <li>Extensible already-defined message types</li> </ul>"},{"location":"pro/telemetry/extended/#improvements","title":"Improvements","text":""},{"location":"pro/telemetry/extended/#16-new-telemetry-message-types","title":"16 New Telemetry Message Types","text":"<p>Types</p> <ul> <li>14 Enumerated types, to be defined and standardized<ul> <li>eg a GPS stats message</li> </ul> </li> <li>1 User-Defined type, for testing</li> <li>1 RESERVED type</li> </ul> <p>See Message Fields (Per-Type) for more details</p>"},{"location":"pro/telemetry/extended/#send-up-to-4-extended-telemetry-messages-per-10-min-window","title":"Send up to 4 Extended Telemetry messages per 10-min window","text":""},{"location":"pro/telemetry/extended/#use-of-basic-telemetry-message-optional","title":"Use of Basic Telemetry message optional","text":"<p>Extended Telemetry can be sent during the time slot the Basic Telemetry is currently sent in.</p> <p>This allows for more Extended Telemetry messages to be sent during a given 10-min window.</p> <p>See Time Slot Behavior for more details</p>"},{"location":"pro/telemetry/extended/#no-rigid-send-sequence","title":"No rigid send sequence","text":"<p>There are different types of Extended Telemetry messages. They can be sent in any order, at any time.</p> <p>See Time Slot Behavior for more details</p>"},{"location":"pro/telemetry/extended/#no-clash-potential-with-other-senders","title":"No clash potential with other senders","text":"<p>Additional data in each Extended Telemetry message identifies the message as being yours.</p> <p>See HdrSlot for more more details</p> <p>See Time Slot Behavior for more details</p>"},{"location":"pro/telemetry/extended/#wider-support-of-field-ranges-via-use-of-single-big-number","title":"Wider support of field ranges via use of single <code>big number</code>","text":"<p>Basic Telemetry segments its <code>big number</code> encoding process into two operations, targeting specific fields in the WSPR message.</p> <p>Extended Telemetry uses a different encoding algorithm that ultimately allows encoded fields to span all the fields of the WSPR message, up to and including a single encoded field of size 29.5 bits.</p> <p>See Additional Encoding Details for more details</p>"},{"location":"pro/telemetry/extended/#defined-clamping-behavior","title":"Defined Clamping Behavior","text":"<p>No Rollover. All values clamped before encoding.</p>"},{"location":"pro/telemetry/extended/#defined-rounding-behavior","title":"Defined Rounding Behavior","text":"<p>Field index values shall be rounded to the closest index value in range when being calculated.</p>"},{"location":"pro/telemetry/extended/#extensible-message-types","title":"Extensible Message Types","text":"<p>If a message can support 5 fields, but you define 1, you can add 4 additional fields later on and the values in the 1st field remain readable in historical data.</p> <p>See Additional Encoding Details for more details.</p>"},{"location":"pro/telemetry/extended/#message-structure","title":"Message Structure","text":"<p>The structure of Extended Telemetry messages falls into two categories</p> <ul> <li>Header fields (common structure to all Extended Telemetry messages)</li> <li>Message fields (distinct structure to each HdrType of Extended Telemetry message)</li> </ul>"},{"location":"pro/telemetry/extended/#header-fields-common","title":"Header Fields (Common)","text":"<p>Header fields specified in unpack order (ie, unpack from <code>big number</code> order).</p> <p>Header Fields common to all Extended Telemetry message types</p> FieldName Unit LowValue HighValue StepSize # Values HdrTelemetryType Enum 0 1 1 2 HdrRESERVED Enum 0 3 1 4 HdrSlot Enum 0 3 1 4 HdrType Enum 0 15 1 16"},{"location":"pro/telemetry/extended/#hdrtelemetrytype","title":"HdrTelemetryType","text":"<p>HdrTelemetryType</p> <p>Defined as <code>0 = Extended Telemetry</code>.</p>"},{"location":"pro/telemetry/extended/#hdrreserved","title":"HdrRESERVED","text":"<p>HdrRESERVED</p> <p>Must be set to <code>0b00</code>.</p>"},{"location":"pro/telemetry/extended/#hdrslot","title":"HdrSlot","text":"<p>HdrSlot</p> <p>Set default value to be <code>0b00</code>.</p> <p>Used to identify this Extended Telemetry message as tied back to the sender of the Type 1 message.</p> <p>This field can take 4 possible values <code>0-3</code>.</p> <p>These values correspond to the 4 time slots that follow the Type 1 message in a given 10-min window.</p> <p>If an Extended Telemetry message is sent in the first slot after the Type 1 message, where the Basic Telemetry message is currently sent, this is slot 0.</p> <p>Each subsequent slot has an incrementally larger number.</p> <p>See Time Slot Behavior for more details</p>"},{"location":"pro/telemetry/extended/#hdrtype","title":"HdrType","text":"<p>Set default value to be <code>0b0000</code>.</p> <p>This field is set to the value of the enumerated type of Extended Telemetry message.</p> <p>Extended Telemetry messages need to be defined and assigned a number to be used in this field in order for receivers to know how to decode the telemetry within.</p> HdrType Type Notes 0 User-Defined No defined structure beyond header. Useful for testing, one-offs, etc. ... 15 RESERVED Reserved for future use."},{"location":"pro/telemetry/extended/#message-fields-per-type","title":"Message Fields (Per-Type)","text":"<p>The goal is to have an enumerated list of well-defined Extended Telemetry messages which can be implemented consistently across trackers.</p> <p>For each Enumerated Extended Telemetry message type, there would be a set of defined Message Fields specific to that message.</p>"},{"location":"pro/telemetry/extended/#example-enumerated-message-types","title":"Example Enumerated Message Types","text":"<p>Here is a hypothetical example of how a list of enumerated types could be captured and grown.</p> HdrType Type Notes 0 User-Defined No defined structure beyond header. Useful for testing, one-offs, etc. 1 Basic Telemetry 2 Extended ranges and higher-res version of Basic Telemetry. 2 GPS Stats Capture stats about GPS behavior or conditions. ... 15 RESERVED Reserved for future use."},{"location":"pro/telemetry/extended/#example-message-gps-stats","title":"Example Message - GPS Stats","text":"<p>This is just a hypothetical example for illustration purposes.</p> <p>GPS Stats Extended Telemetry message Field Definitions.</p> Field Unit LowValue HighValue StepSize # Values SatsUSA Count 0 128 4 33 SatsChina Count 0 128 4 33 SatsRussia Count 0 128 4 33 SatsEU Count 0 128 4 33 SatsIndia Count 0 128 4 33 hdop Value 0 10 2 6 <p>Analysis.</p> <pre><code>Encodable Bits Available: 29.50\nEncodable Bits Used     : 27.81 ( 94.26 %)\nEncodable Bits Remaining:  1.69 (  5.74 %)\n\nField         # Values    # Bits    % Used\n------------------------------------------\nSatsUSA             33      5.04     17.10\nSatsChina           33      5.04     17.10\nSatsRussia          33      5.04     17.10\nSatsEU              33      5.04     17.10\nSatsIndia           33      5.04     17.10\nhdop                 6      2.58      8.76\n</code></pre>"},{"location":"pro/telemetry/extended/#defining-new-extended-telemetry-message-types","title":"Defining New Extended Telemetry Message Types","text":"<p>Use the Extended Telemetry playground to try new message structures.</p>"},{"location":"pro/telemetry/extended/#additional-encoding-details","title":"Additional Encoding Details","text":""},{"location":"pro/telemetry/extended/#packing-big-number","title":"Packing <code>big number</code>","text":"<p>Messages are packed into the <code>big number</code> in reverse order from their definition. Header fields are packed in reverse order from their description above.</p> <p>Illustration using the GPS Stats message above</p> <p>The GPS Stats message defines:</p> <ul> <li>SatsUSA</li> <li>SatsChina</li> <li>SatsRussia</li> <li>SatsEU</li> <li>SatsIndia</li> <li>hdop</li> </ul> <p>The header fields are:</p> <ul> <li>HdrTelemetryType</li> <li>HdrRESERVED</li> <li>HdrSlot</li> <li>HdrType</li> </ul> <p>The packing into <code>big number</code> is in this order:</p> <ul> <li>hdop</li> <li>SatsIndia</li> <li>SatsEU</li> <li>SatsRussia</li> <li>SatsChina</li> <li>SatsUSA</li> <li>HdrType</li> <li>HdrSlot</li> <li>HdrRESERVED</li> <li>HdrTelemetryType</li> </ul>"},{"location":"pro/telemetry/extended/#callsign-characters-1-and-3","title":"Callsign Characters 1 and 3","text":"<p>Callsign characters 1 and 3 are not used for data encoding</p> <p>Extended Telemetry is encoded into the Type 1 Message Format, except for the Callsign characters 1 and 3.</p> <p>See Channels for details on use of characters 1 and 3.</p>"},{"location":"pro/telemetry/extended/#time-slot-behavior","title":"Time Slot Behavior","text":"<p>Extended Telemetry operates within the established 10-min window.</p> <p>Below is a description of how the Extended Telemetry changes the message types sent within the 10-min window in a backward-compatible way.</p>"},{"location":"pro/telemetry/extended/#10-minute-schedule-framework","title":"10-Minute Schedule Framework","text":"<p>This is the current pattern for when to send the Type 1 message in a repeating 10-min window.</p> start minute + 2 min + 4 min + 6 min + 8 min Regular Type 1 - - - -"},{"location":"pro/telemetry/extended/#including-basic-telemetry","title":"Including Basic Telemetry","text":"<p>This is the current pattern for when to send the Basic Telemetry message in relation to the Type 1 message in a repeating 10-min window.</p> start minute + 2 min + 4 min + 6 min + 8 min Regular Type 1 Basic Telemetry - - -"},{"location":"pro/telemetry/extended/#including-basic-andor-extended-telemetry","title":"Including Basic and/or Extended Telemetry","text":"<p>The <code>[Ext Telemetry]</code> notation means that an Extended Telemetry message can be sent in that slot, but is not required to be.</p> <p>Any HdrType type of Extended Telemetry can be sent at any time <code>[Ext Telemetry]</code> is specified.</p>"},{"location":"pro/telemetry/extended/#including-basic-and-extended-telemetry","title":"Including Basic and Extended Telemetry","text":"start minute + 2 min + 4 min + 6 min + 8 min Regular Type 1 Basic Telemetry [Ext Telemetry] [Ext Telemetry] [Ext Telemetry]"},{"location":"pro/telemetry/extended/#replacing-basic-with-extended-telemetry","title":"Replacing Basic with Extended Telemetry","text":"start minute + 2 min + 4 min + 6 min + 8 min Regular Type 1 [Ext Telemetry] [Ext Telemetry] [Ext Telemetry] [Ext Telemetry]"},{"location":"pro/telemetry/extended/#extended-telemetry-schedule-specifics","title":"Extended Telemetry Schedule Specifics","text":"<p>Extended Telemetry slot rules</p> <p>Extended Telemetry:</p> <ul> <li>Can be sent in any slot other than the start minute</li> <li>Does not always have to be sent in the same slot</li> <li>Can replace Basic Telemetry sometimes and other times not</li> </ul> <p>The same HdrType Extended Telemetry message can NOT be sent more than once in a 10-min window</p> <p>Except for User-Defined messages, they can be sent in any/all of the HdrSlot slots.</p> <p>These are all valid send sequences</p> start minute + 2 min + 4 min + 6 min + 8 min Regular Type 1 Basic Telemetry - - - Regular Type 1 Basic Telemetry Ext Telemetry - - Regular Type 1 Basic Telemetry - Ext Telemetry - Regular Type 1 Basic Telemetry Ext Telemetry Ext Telemetry Ext Telemetry Regular Type 1 Ext Telemetry - - - Regular Type 1 Ext Telemetry - Ext Telemetry - Regular Type 1 Ext Telemetry Ext Telemetry Ext Telemetry Ext Telemetry Regular Type 1 - - - - Regular Type 1 - - - Ext Telemetry"},{"location":"pro/telemetry/extended/#code","title":"Code","text":"<p>See Programming Library for implementation.</p>"},{"location":"pro/telemetry/extended/playground/","title":"Extended Telemetry Playground","text":""},{"location":"pro/telemetry/history/","title":"History","text":""},{"location":"pro/telemetry/history/#recognition","title":"Recognition","text":"<p>The Traquito technologies build on the contributions made by others that came before.</p>"},{"location":"pro/telemetry/history/#credit","title":"Credit","text":"<p>Hans Summers designed the Channel scheme and U4B protocol and was later used in his U4B tracker.</p> <p>U4B protocol is labeled Basic Telemetry on this site</p> <p>The designation was given to highlight the the relationship of that data encoding to the Enhanced Telemetry subsequently introduced.</p> <p>Pedro Converso runs the LU7AA tracking and registration website.</p> <p>Sadly, Pedro is no longer with us link</p> <p>2024-11-17</p> <p>Hello everyone, today Pedro LU7ABF left us forever; we will remember him for inspiring us, for the work and research he did for Amsat Argentina and for his beloved Radio Club QRM Belgrano. Today he rests in peace. A sad Sunday for the entire amateur radio community.</p> <p>lu1esy</p>"},{"location":"pro/telemetry/history/#sites","title":"Sites","text":"<p>To learn more about the relationship between different WSPR Pico Balloon sites, see the FAQ page on Site Relationships.</p>"},{"location":"pro/trackerhacker/","title":"Tracker Hacker","text":""},{"location":"pro/trackerhacker/#tracker-hacker_1","title":"Tracker Hacker","text":"<p>The Jetpack tracker is designed to be easy to assemble and fly.</p> <p>The weight of the combined RPi Pico + Add-on Module works perfectly, and with larger balloons weight hardly matters at all.</p> <p>However, for those who want to shave off every milligram of weight possible, there are options.</p> <p>You really don't need to do this.  It's just for the fanatical.</p> <p>You will probably destroy your RPi Pico trying to do this.  Don't do it.</p>"},{"location":"pro/trackerhacker/#chop-the-rpi-pico","title":"Chop the RPi Pico","text":"<p>The bottom portion of the RPi Pico is only broken out pins from the RP2040.</p> <p>The Add-on Module doesn't need any of those pins, so feel free to chop.</p> <p></p>"},{"location":"pro/trackerhacker/#process","title":"Process","text":"<p>Get a big pair of sidecutters, align with the pins below the crystal, and cut.</p> <p>No need to \"snip\" along the length.  Just align across the entire body of the RPi Pico and squeeze.</p> <p>Surprisingly easy. </p>"},{"location":"pro/trackerhacker/#savings","title":"Savings","text":"<p>You save around 0.7 grams.</p> <p></p> <p>Fully soldered (without antennas):</p> <p></p>"},{"location":"pro/trackerhacker/#rpi-pico-schematic","title":"RPi Pico Schematic","text":"<p>The full schematic of the RPi Pico can be seen here (in high-resolution), showing nothing but breakout, hence the safe chop:</p> <p></p>"},{"location":"search/spots/dashboard/example/","title":"Spot Search Example","text":""},{"location":"solar/","title":"Solar System","text":"","boost":10},{"location":"solar/#overview","title":"Overview","text":"<p>Solar System is a kit that makes making your own solar panels easy, for use in pico balloon WSPR trackers.</p> <p>The Solar System works for any tracker, but also has special features making it work especially well with Traquito Jetpack tracker.</p> <p>The cost of kit + solar cells for a tracker is $1.27!</p> <p></p>","boost":10},{"location":"solar/#solar-cells-and-panels-background","title":"Solar Cells and Panels Background","text":"<p>Solar cells have a positive and negative side, and produce 0.5v voltage apiece. </p> <p>A solar panel is an arrangement of cells, and in the case of trackers, cells in series to equal a higher combined voltage.</p> <p>That means soldering the cells in series (front to back), just as you would combine batteries to achieve a higher voltage.</p> <p>In this diagram, we see 6 cells assembled into a panel which has 3.0v output. </p> <p>Here is a similar 3-cell view from the side: </p>","boost":10},{"location":"solar/#diy-solar-panel-problems","title":"DIY Solar Panel Problems","text":"<p>Solar cell problems</p> <p>Solar cells are very fragile!</p> <p>Solar cells are very tricky to solder to.</p> <p>Solar cells then need to be arranged on a support structure (panel) and mounted to a tracker in order to fly.</p> <p>This is very error prone, time consuming, and boring.</p> <p>The solution - Solar System!</p>","boost":10},{"location":"solar/#making-it-easier","title":"Making it Easier","text":"<p>Solar System lets you build solar panels quickly and easily by sandwiching solar cells between two PCBs that do all the electrical connections for you.</p> <p>This is the PCB:</p> <p></p> <p>When you solder one PCB on the top of the solar cells, another PCB on the bottom, the internal circuitry of the PCB will combine the cells and make a complete panel.</p> <p></p> <p>Making a 3v solar panel</p> <p>A set of 3 cells together makes a 1.5v panel (3 * 0.5v).</p> <p>Once you have one set of 3 cells assembled, make another, and combine together.</p> <p>The two 1.5v panels in series makes a 3v panel.</p> <p>A 3v panel is can easily power a tracker!</p>","boost":10},{"location":"solar/#components","title":"Components","text":"<p>The 3-cell jig</p> <p></p> <p>The center piece</p> <p></p> <p>The whole thing assembled together</p> <p></p>","boost":10},{"location":"solar/#assembly","title":"Assembly","text":"<p>The orientation of the 3-cell jig PCB is critical.</p> <p>The arrows on the PCB must face in opposite directions on the top and bottom of the cells.  As in, you should be able to flip the 3-cell jig over (like turning a page in a book) and the arrows stay pointing to the right no matter which side you look at.</p> <p></p> <p>Take note that the silkscreen marks the 3 sections where each cell goes, each with 3 oval slots per-cell.</p> <p>Also note -- The 3-cell jig PCB is used both on the top and bottom of the cells, and there is no \"front\" or \"back\" of the PCBs themselves.  The PCB design lets this happen.</p> <p>Solder the cells into place both on the top and bottom.  No need to use more than one oval per-side per-cell.  No need fill the oval with solder, just use enough to make the connection.</p> <p>This amount of solder is just fine:</p> <p></p>","boost":10},{"location":"solar/#top-view","title":"Top View","text":"","boost":10},{"location":"solar/#bottom-view","title":"Bottom View","text":"<p>(You see this if you flip the jig over top-to-bottom, but don't do that, this is illustration only.  See assembly instructions below.)</p> <p></p> <p>Once you have soldered the cells in place, solder the plated holes throughout the strip.</p> <p>Best if you have a fine-point soldering iron which you can stick into each hole, swirl around, and feed enough solder such that the two PCBs become connected across the small vertical gap separating them.</p> <p></p> <p>Tip</p> <p>It can be very helpful to weigh the cells and PCBs down as you work through them.</p> <p>A pair of cutters with padded handles works very well.</p> <p></p> <p>Sequence for assembling a 3-cell jig</p> <ul> <li>You need 3 solar cells and 2 3-cell jig PCBs</li> <li>Put your 3 solar cells to the side of your work area face-down</li> <li>Take one of the cells and put in center of your work area</li> <li>Lay down a 3-cell jig PCB on top of the one cell, in the left-most slot, arrows facing right</li> <li>Weight down the work</li> <li>Solder the cell (place tip on edge of oval and also touching cell, wait 3 sec, then slowly feed solder)</li> <li>Repeat this for the 2 remaining cells, moving weight as needed</li> <li>Flip the now-soldered 3-cell PCB to its back, as though you're turning a page of a book, to show the top side of the cells</li> <li>Place another 3-cell jig PCB on top of the cells, arrows facing right</li> <li>Weight down the work</li> <li>Solder the plated holes along the length of the jig</li> <li>Solder the top of the solar cells within the oval</li> <li>Test by measuring voltage across the 3 cells</li> </ul>","boost":10},{"location":"solar/#soldering-demo","title":"Soldering Demo","text":"<p>Here is a demonstration of soldering the Solar System PCB to a solar cell.</p> <p></p>","boost":10},{"location":"solar/#soldering-jig-3d-printed","title":"Soldering Jig (3D Printed)","text":"<p>There is a jig you can 3D print to make soldering easier!</p> <p>The jig is sized for the solar cells specified at the end of this page.  (These cells are frequently in stock, cheaep, and work great).</p> <p>Use it to assemble both of the 3-cell halves of the Solar System.</p> <p> </p>","boost":10},{"location":"solar/#soldering-jig-file-downloads","title":"Soldering Jig File Downloads","text":"Soldering Jig 3D Print File Description Solar_System_Soldering_Jig_2024-01-01.stl Released 2024-01-01","boost":10},{"location":"solar/#assembly-combined","title":"Assembly - Combined","text":"<p>Combine the two 3-cell jigs together, in series, using the center piece.</p> <p>The arrows must all point in the same direction, left to right, when looking top-down.</p> <p>Simply place a 3-cell jig on top of the center piece, overlapping one hole, then melt the solder from the jig into the center piece.</p> <p>The center piece should have the 3 square pads facing up.</p> <p>Do that for each of the 3-cell jigs.</p> <p></p> <p>You end up with stack of PCBs at the connection point to the center piece.  You get small spaces when a solar cell is sandwiched between.</p> <p>Observe this side view, where the 3-cell jig and solar cells are on the left, connected to the center piece on the right.</p> <p></p>","boost":10},{"location":"solar/#testing","title":"Testing","text":"<p>Make sure you test your panel during assembly and after final assembly.</p> <p>Note -- The PCB arrows point to the plated circle at the end of each 3-cell jig.</p> <p>The circle the arrows point to has the same charge as the side of the cells you're looking at.</p> <p>Put simply</p> <ul> <li>If you're looking at the top of the cells (negative), the arrows point to the negative circle</li> <li>If you're looking at the bottom of the cells (positive), the arrows point to the positive circle</li> </ul> <p>Once you have assembled the 6-cell panel, the above still holds true, but now across 6 cells.</p> <p></p> <p>To test during or after assembly, you can test between any cell or range of cells.</p> <p></p>","boost":10},{"location":"solar/#electrical-hookup","title":"Electrical Hookup","text":"<p>To use the panel in your tracker, run a wire from the positive and negative end of the panel to your tracker power input.</p> <p>An 11cm / 4.5\" length of wire works great for Jetpack.</p>","boost":10},{"location":"solar/#mounting","title":"Mounting","text":"<p>If you are using Traquito Jetpack tracker, then there is a special design detail that makes attaching the panel to the tracker very easy.</p> <p>The rear of the center piece has an exposed rectangle copper pad.  This pad is not electrical, it is purely for mechanical connections to the tracker.</p> <p></p> <p>If you flip the assembled panel over you can get access to this pad. </p> <p>You can solder the USB connector of the assembled Jetpack onto the rectangle to easily mount the cells to the tracker.  You don't need a lot of solder.</p> <p></p> <p></p> <p>When using this approach, make sure you orient the Jetpack so the positive power pad is on the same side of the panel as the positive connection (follow the arrows).</p> <p></p>","boost":10},{"location":"solar/#extra-features","title":"Extra Features","text":"<p>Each 3-cell jig has 4 non-electrically connected pads per-side.  They are each a copper island connected to nothing else.  You can use them to mechanically attach the jig to something else if useful, or just leave as-is.</p> <p>There are also unplated holes throughout the jig if useful.</p> <p></p> <p>The center piece, on the top, in the middle, has 3 non-electrically connected copper island pads as well.</p> <p></p> <p>The middle pad is very useful for soldering a short length of semi-rigid wire, which you can then tape your antenna/suspension to.</p> <p>Any fine-tuning of balance can be achieved by bending of the wire.</p> <p>The wire also acts as a mechnical strain relief on the solder connection on the tracker (solder connection points should have taped relief also, not shown in the image).</p> <p></p> <p>Here is an example of a fully-assembled Jetpack tracker with Solar System.</p> <p></p>","boost":10},{"location":"solar/#weight","title":"Weight","text":"<p>Solar System fully assembled: 5.9 grams</p> <p></p> <p>Jetpack + Solar System fully assembled: 11.3 grams</p> <p></p>","boost":10},{"location":"solar/#dimensions","title":"Dimensions","text":"<p>Center PCB: 5mm x 43mm / 0.2\" x 1.7\"</p> <p>3-cell jig PCB: 5mm x 99mm / 0.2\" x 3.9\"</p> <p>The 3-cell jig PCB was designed around a solar cell which is 19mm / 0.75\", but as long as the cell fits between the plated holes you're ok.</p> <p>Fully assembled Solar System: 5mm x 224mm / 0.2\" x 8.8\"</p>","boost":10},{"location":"solar/#costs","title":"Costs","text":"<p>Total cost per solar panel: $1.27 (this does not include shipping, as this should be added onto a tracker order for maximum savings).</p> <p>The solar cells used in pricing were the cells below.</p> <p>100 cells for $16 = $0.16 apiece.</p> <p>6 cells * $0.16 = $0.96.</p> <p></p> <p>The Solar System kit PCBs cost $9.10 for 30 kits = $0.31 apiece.</p> <p></p>","boost":10},{"location":"solar/#ordering-and-handling-details","title":"Ordering and Handling Details","text":"<p>For maximum savings (avoiding shipping), add this PCB to your order when ordering Jetpack.  It can be purchased by itself of course.</p> <p>Also JLCPCB is WAY cheaper when you order fewer long boards instead of many small boards.</p> <p>Because of that \"fewer boards\" savings, the Solar System kit was designed as one long PCB strip.  That strip is 5mm x 441mm / 0.2\" x 17.4\" (pretty long).</p> <p>When it arrvies to you, you need to cut the strip into the pieces described above.  You do that with a side cutter (very easy).</p> <p></p> <p>The PCB is marked with a special line with an \"X\" through it showing where to cut.</p> <p></p> <p>When ordering from JLCPCB (see link below), make sure for these PCBs (unlike the Jetpack) that you choose a quantity no higher than 30, and a 0.6mm thickness.</p> <p>If you choose a quantity higher than 30 the price blows up for some reason.  Same with a thickness less than 0.6mm.</p> <p></p> <p>Also note -- This is just a PCB order, not an assembled PCB.  There are no parts to assemble, no BOM, no CPL.  Just the PCBs.</p>","boost":10},{"location":"solar/#jlcpcb-over-cautiousness","title":"JLCPCB Over-Cautiousness","text":"<p>Warning</p> <p>JLCPCB may email you and ask if you are comfortable with the very thin/long boards and whether you accept any risk of poorly produced boards.</p> <p>You should say yes.</p> <p>That being said, there is the possibility that perhaps something does go wrong on their side, though, these boards have been ordered before and have worked just fine (so don't sweat it).</p> <p>It is also possible that JLCPCB cancels your order or states that the boards are not within their capabilities. This is not correct. You can politely explain that these boards have been made before, you do want these boards manufactured, and that you do accept any risks they are concerned about.</p>","boost":10},{"location":"solar/#hardware-design-file-downloads","title":"Hardware Design File Downloads","text":"<p>Use these to order the Solar System from JLCPCB.</p> <p>See here for ordering instructions: Ordering from JLCPCB</p> JLCPCB Assembly Files Description TraquitoSolarSystem3CellComplete-gerbers.zip Released 2023-07-10","boost":10},{"location":"tracker/","title":"Jetpack WSPR Tracker","text":"","boost":10},{"location":"tracker/#overview","title":"Overview","text":"<p>Jetpack is a custom Traquito-designed pico balloon WSPR tracker aimed at beginners and experienced alike.</p> <p>The hardware design and software are freely available to all -- you order, assemble, and fly.</p> <p>Fly cheap - $14 per-tracker, shipped!</p> <ul> <li>Uses Raspberry Pi Pico as base board</li> <li>Solder on the Add-on Module to complete the Jetpack tracker</li> </ul> <p>Simple to set up and use!</p> <ul> <li>Hardware setup takes 5 minutes and a soldering iron</li> <li>Plug into USB to drag/drop the tracker software (UF2)</li> <li>Stay plugged into USB and use the webpage-based configuration utility</li> <li>Great for schools or beginners</li> </ul> <p>Telemetry out of the box!</p> <p>Works with Basic Telemetry of GPS coordinates, Altitude, Speed, and Voltage.</p> <p>Pick a free channel, then track your flight!</p> <p>Easy to power!</p> <p>Wide range of input voltages (3.0V to 5.5V) thanks to buck/boost regulator.</p> <p>This allows significant flexibility in powering the unit, such as by:</p> <ul> <li>Solar</li> <li>LiPo</li> <li>2 or 3 AAA/AA lithium cells in series</li> </ul> <p>All frequencies!</p> <p>Supports all WSPR bands (20m and all others).</p> Add-on Module Jetpack = RPi Pico + Module","boost":10},{"location":"tracker/#jetpack-technical-details","title":"Jetpack Technical Details","text":"<p>See this page for details</p>","boost":10},{"location":"tracker/#getting-it","title":"Getting It","text":"<p>The tracker comes in two parts that you will assemble (solder together) yourself</p> <ul> <li>Raspberry Pi Pico</li> <li>Add-on Module</li> </ul> <p>Getting the Raspberry Pi Pico means buying it from somewhere, Adafruit is a good option. (Get the cheapest no-header version, should be $4).</p> <p>Getting the Add-on Module means submitting an order to the PCB Assembly service at JLCPCB -- See here: (link)</p> <p>Solder the Add-on Module to the back of the RPi Pico to create the Jetpack tracker.</p>","boost":10},{"location":"tracker/#assembling","title":"Assembling","text":"<p>It is best to assemble (solder together) on a breadboard, using two header pins to lock together the alignment of the Add-on Module and the RPi Pico.</p> <p>Assembly Instructions</p> <ul> <li>Place the header pins on the 3rd row and 3rd column of each of the two halves of the breadboard</li> <li>Place the Add-on Module, flipped, so the back pads are facing upward</li> <li>Place the RPi Pico on top</li> <li>Now you are ready to solder the two parts together</li> <li>(See image below for guidance on which pads to solder)</li> </ul> <p>Don't solder the alignment pins to the tracker!</p> <p>Solder all other pads first, then remove the tracker from the breadboard and solder the final two pads that were used for alignment.</p> <p>Please take note of the orientation!</p> <p>The RPi Pico and Add-on Module must be aligned back-to-back as shown below.</p> <p>Alignment:  </p> <p>Notice there is a silkscreen \"X\" on the alignment hole pad.  You do not need to solder this. </p> <p>You want to make sure the pad of the Add-on Module is soldered to the edge of the RPi Pico.  Look for a nice connection.</p> <p>Here is an example of a single pad having been soldered.  No need to \"fill in\" the hole. </p> <p>You are welcome to pile on the solder if you want to.  Any increase in weight will be small, so not a big deal.</p> <p>This may be the preferred approach for students or those with less precise soldering equipment. </p>","boost":10},{"location":"tracker/#programming","title":"Programming","text":"<p>Once you have assembled (soldered) your tracker, you must program it.</p> <p>Programming means putting the tracker software onto the physical device hardware.  Without software, the tracker hardware does nothing.</p> <p>Programming instructions</p> <ul> <li>Plug the tracker into the computer via USB</li> <li>(a removable drive appears, you can ignore the contents)</li> <li>Drag/Drop the tracker software (.UF2 file) onto that removable drive</li> <li>(the drive disappears, you are now done programming)</li> <li>(there is no need to reboot or unplug the tracker, proceed to configuration)</li> </ul> <p>The .UF2 file download is available in the Tracker Software Downloads section of this page.</p>","boost":10},{"location":"tracker/#configuration","title":"Configuration","text":"<p>You now have a functioning tracker, congratulations!  You can't fly yet, though, you have to configure it first!</p> <p>Configuring the tracker means telling the tracker the information it needs to do its job.</p> <p>You use this same information later to search for the tracker's path and telemetry, so write it down.</p> <p>You need to configure the tracker with</p> <ul> <li>The frequency band (usually 20m)</li> <li>The channel (pick one someone else isn't using)</li> <li>Your callsign</li> </ul> <p>Plug your tracker into USB and configure your tracker through the Configuration GUI. </p> <p>Tip</p> <p>If you want to send test WSPR messages during configuration, solder on a short wire (eg 3 inches) to each antenna pad.  This will get replaced by a full-sized antenna later.</p> <p>Once you have configured your tracker, disconnect it from the computer.</p>","boost":10},{"location":"tracker/#power-and-antennas","title":"Power and Antennas","text":"<p>Jetpack has 6 pads on its front for power and antennas</p> <ul> <li>Top two - Power pads (power during flight)</li> <li>Middle two - Transmitter antenna</li> <li>Bottom two - GPS antenna</li> </ul> <p>Jetpack must have power and antennas before it will work correctly.</p> <p></p>","boost":10},{"location":"tracker/#gps-antenna","title":"GPS Antenna","text":"<p>The GPS antenna can have one leg, 5cm or 2 inches in length, on the left pad, extending away from the tracker.</p> <p>I use solid core 20 AWG wire but really most anything works.</p> <p>Example image (not to scale): </p>","boost":10},{"location":"tracker/#transmitter-antenna","title":"Transmitter Antenna","text":"<p>The Transmitter antenna needs to have two legs, each 199.2\" long (quite long), for 20m (different length for other bands).  This is due to the relationship between the transmission frequency and the antenna length.  This length is a \"half wave\" dipole.</p> <p>Tip</p> <p>A common approach is to use a very thin (36AWG) enameled magnet wire. With this kind you don't even scrape the enamel off before soldering, it just melts away when you push inside a solder blob.</p> <p>Tip</p> <p>You can read some tips on how to manage long lengths of wire like this, and launch tips, here: https://www.picoballoons.com/trackers/wspr-launch-process</p> <p>Tip</p> <p>You can also use the Wind-O-Matic 5000 to do the winding for you!</p>","boost":10},{"location":"tracker/#solar-power","title":"Solar Power","text":"<p>You're going to need to power your tracker when in flight and during testing.</p> <p>Solar is a very common choice.</p> <p>Tip</p> <p>Consider whether the Traquito Solar System is right for you! </p>","boost":10},{"location":"tracker/#testing","title":"Testing","text":"<p>Once your tracker is configured, antennas attached, and powered, you should do some testing before flying.</p> <p>Tip</p> <p>A great way to test is to set up your computer to receive WSPR messages and run your tracker in the window (so the GPS has a clear view of the sky).</p> <p>You will see your tracker's transmitted messages exactly as they will be when your tracker is flying for real.</p> <p>Tip</p> <p>The ideal testing setup is powering your tracker with the same solar panels you will use in flight.</p> <p>Using (for example) a power bank to power the tracker can be helpful for early testing, but doesn't prove the whole system works when flying.</p> <p>When your tracker transmits while in Flight Mode you will see 2 types of messages transmitted</p> <ul> <li>Regular Messages</li> <li>Encoded Messages</li> </ul> <p>You can learn more about Regular and Encoded messages on the Channel Map Help.</p>","boost":10},{"location":"tracker/#usage-policy","title":"Usage Policy","text":"<p>Please see the About page for more information.</p>","boost":10},{"location":"tracker/#hardware-design-file-downloads","title":"Hardware Design File Downloads","text":"<p>Use these files to order the Add-on Module from JLCPCB</p> <p>Ordering instructions can be seen here: JLCPCB Ordering Instructions.</p> JLCPCB Assembly Files Description bom_jlcpcb.2024-09-13.csvcpl_jlcpcb.2024-09-13.csvTraquitoJetpack-gerbers.2024-09-13.zip Released 2024-09-13","boost":10},{"location":"tracker/#tracker-software-downloads","title":"Tracker Software Downloads","text":"<p>Use the most recent .UF2 file to program the tracker.</p> <p>You must solder the Add-on Module to the RPi Pico before the software/tracker will work</p> <p>The RPi Pico cannot run the software without the Add-on Module soldered on.</p> Tracker Software Description TraquitoJetpack.2023-06-20.uf2 Initial Release TraquitoJetpack.2023-07-10.uf2 General Changes:- Channel 0 supported now- Hot/Warm/Cold GPS reset uses CASIC commands not UBX- Startup blink shows system component power testsConfiguration Mode Changes:- Radio not active on startup (auto on during send)- All GPS NMEA sentences enabled- False lock duration fixFlight Mode Changes:- Regular message reports 13 dBm instead of 17 dBm TraquitoJetpack.2023-07-11.uf2 General Changes:- performance update prevents dropped NMEA messages","boost":10},{"location":"tracker/#tracker-not-showing-up-in-configuration-selection-window","title":"Tracker not showing up in configuration selection window?","text":"<p>USB power cables don't work for configuration</p> <p>Some USB cables are \"power only\" -- this won't work for Jetpack.</p> <p>You need a USB cable which has both data and power.</p>","boost":10},{"location":"tracker/#questions-comments","title":"Questions / Comments?","text":"<p>Please see the About page for more information.</p>","boost":10},{"location":"tracker/V1/","title":"Jetpack Technical Details","text":"","boost":8},{"location":"tracker/V1/#jetpack-hardware","title":"Jetpack Hardware","text":"<p>Jetpack inherits RPi Pico features and extends them through the Add-on Module.</p>","boost":8},{"location":"tracker/V1/#rpi-pico-component","title":"RPi Pico Component","text":"<p>The RPi Pico provides</p> <ul> <li>RP2040 CPU</li> <li>Flash Memory</li> <li>Temperature sensor</li> <li>USB and support for Drag/Drop software upload</li> </ul> <p>The RP2040 is run at 48MHz speed to balance conserving power while retaining fast computation.</p> <p>The flash memory is used to permanently store user configuration across power resets.</p> <p>Temperature sensing makes use of the internal temperature sensor of the RP2040 instead of an external component, saving board space and cost.</p> <p>The USB interface allows for both easy uploading of the Jetpack software, as well as interactive configuration and testing of the device before flight.</p>","boost":8},{"location":"tracker/V1/#add-on-module-component","title":"Add-on Module Component","text":"<p>The Add-on Module provides</p> <ul> <li>GPS (ATGM336H)</li> <li>Radio Transmitter (SI5351A) + 0.5ppm TCXO</li> <li>Voltage Monitor</li> </ul>","boost":8},{"location":"tracker/V1/#gps-details","title":"GPS Details","text":"<p>The GPS uses signals from both the US GPS satellite system as well as the BEIDOU GPS satellite system.</p> <p>The design places the GPS and its antenna pads far away from electrical noise, for improved lock speed and quality.</p> <p>Sensitive GPS areas are shielded with a special arrangement of vias designed to reduce interference.</p>","boost":8},{"location":"tracker/V1/#radio-transmitter-details","title":"Radio Transmitter Details","text":"<p>The Radio Transmitter consists of the SI5351A device.</p> <p>For stronger transmissions, instead of a single clock source used as the radio signal, two clocks are used, 180 degrees phase from one another for double driving power.</p> <p>Each clock drives one leg of the dipole antenna, each at the maximum output current (8mA).</p> <p>No TCXO calibration or correction is required for proper operation.</p> <p>The Radio Transmitter antenna pads are placed away from sources of noise.</p> <p>To avoid transmission frequency drift in cold or changing temperatures, the radio is powered up 30 seconds before transmissions to allow for stabilization.</p>","boost":8},{"location":"tracker/V1/#voltage-monitor-details","title":"Voltage Monitor Details","text":"<p>Solar-powered flight is common in pico balloon tracker configurations.</p> <p>The unpredictable and wide range of supplied power from solar can sometimes create instability in hardware designed to operate within a specific range.</p> <p>Jetpack incorporates a dedicated hardware-only voltage monitoring device which can rescue the system in the event of a lockup due to under-power conditions.</p> <p>The monitor looks for supply voltages below 2.6v as an indication of system fault and holds the system in reset for a short period to clear the issue.</p>","boost":8},{"location":"tracker/V1/#jetpack-software","title":"Jetpack Software","text":"<p>The software that operates the Jetpack tracker hardware is designed to be simple, intuitive, and fault-tolerant.</p> <p>Jetpack software operates in two modes</p> <ul> <li>Configuration Mode</li> <li>Flight Mode</li> </ul>","boost":8},{"location":"tracker/V1/#configuration-mode","title":"Configuration Mode","text":"<p>Configuration mode is automatically selected whenever you plug Jetpack into the computer through USB.</p> <p>Simply providing power via USB will lead to Flight Mode operation. See A Note about USB for clarification.</p> <p>Jetpack assumes you want to configure or test your device, so the GPS is turned on automatically and the radio made ready in preparation.</p> <p>In this mode, you have flexibility to set your flight details (band, channel, callsign) as well as test the hardware features of the device.</p> <p>Configuring and interacting with Jetpack is easy.  Jetpack speaks WebSerial, meaning you use a web browser, mouse, and keyboard to interact with it just as you would any other webpage.</p> <p>The settings you supply are saved in permanent memory and persist across reboots and power outages.</p> <p>In Configuration Mode, you can test sending Regular messages, but encoded Telemetry cannot be sent.</p> <p>Encoded telemetry is only sent during Flight Mode.</p> <p>See the help page of the Configuration GUI for details.</p>","boost":8},{"location":"tracker/V1/#flight-mode","title":"Flight Mode","text":"<p>When Jetpack is disconnected from the computer, it automatically enables Flight Mode.</p> <p>On startup in Flight Mode, Jetpack first checks that you have saved Flight Configuration (band, channel, callsign).</p> <p>If there is no saved Flight Configuration, a \"panic\" rapid-flashing LED pattern appears, the device resets itself a few moments later, and the cycle repeats.</p> <p>You cannot fly a \"default\" configuration of any kind.  If you fly Jetpack with no configuration, it will do nothing, there will be no transmissions.</p> <p>Assuming Flight Configuration is found, Jetpack looks up the transmission schedule associated with the band and channel, and begins its Tracker Cycle.</p>","boost":8},{"location":"tracker/V1/#tracker-cycle","title":"Tracker Cycle","text":"<p>The Tracker Cycle consists of</p> <ul> <li>Get a GPS lock</li> <li>Idle until 30 seconds before it is time to transmit</li> <li>Turn on the radio transmitter early to warm it up and reduce frequency drift</li> <li>Transmit Regular message, then Encoded message</li> </ul> <p>Jetpack only transmits messages when a GPS lock has been acquired.</p> <p>This cycle repeats endlessly as long as there is power.  If power is lost and later restored, this cycle starts again.</p> <p>You can visually determine what phase of this sequence Jetpack is in by monitoring the blinking pattern of the LED on the RPi Pico.</p>","boost":8},{"location":"tracker/V1/#whats-it-doing","title":"What's it doing?","text":"<p>The tracker indicates what it is doing through its LED blinking.</p> <p>Two sets of blinking patterns</p> <ul> <li>Startup Power Blinking Sequence</li> <li>Tracker Cycle Blinking Sequence</li> </ul>","boost":8},{"location":"tracker/V1/#blinking-sequence-startup","title":"Blinking Sequence Startup","text":"<p>When the device is first turned on, or reset</p> <ul> <li>Blink #1 - System on, power sufficient</li> <li>Blink #2 - GPS operational, power sufficient for this component</li> <li>Blink #3 - TX operational, power sufficient for this component</li> <li>4 consecutive blinks - Flight Mode configuration found, ok to fly</li> </ul> <pre><code>graph TB\n\nPowerOn@{ shape: circle, label: \"Power On Reset\" }\nPanic@{ shape: circle, label: \"Panic&lt;br/&gt;(rapid blinking)\" }\n\nPowerOn --&gt; Blink1[\"Test system power&lt;br/&gt;(blink #1)\"]\nBlink1 --&gt; | undervoltage | PowerOn\nBlink1 --&gt; Blink2[\"Test GPS power&lt;br/&gt;(blink #2)\"]\nBlink2 --&gt; | undervoltage | PowerOn\nBlink2 --&gt; Blink3[\"Test TX power&lt;br/&gt;(blink #3)\"]\nBlink3 --&gt; | undervoltage | PowerOn\nBlink3 --&gt; Blink4[\"Check Flight config&lt;br/&gt;(blink 4 times if ok)\"]\nBlink4 --&gt; | bad config | Panic\nPanic --&gt; | restart | PowerOn\nBlink4 --&gt; FlightMode[Flight Mode]</code></pre>","boost":8},{"location":"tracker/V1/#blinking-pattern-sequence-flight-mode","title":"Blinking Pattern Sequence Flight Mode","text":"<p>When the device is in Flight Mode</p> <ul> <li>Short blink every 1 second - GPS is waiting for a lock</li> <li>Short blink every 5 seconds - Idle period before transmission</li> <li>Alternating on/off every 1 second - Radio operational for warmup and transmission</li> </ul> <pre><code>graph TB\n\nWaitGps[\"Wait for GPS Lock&lt;br/&gt;(blink every 1 sec)\"] --&gt; |Got Lock| WaitingToSend[\"Waiting to send&lt;br/&gt;(blink every 5 sec)\"]  \nWaitingToSend --&gt; |30 sec before time to send| Warmup[\"30 Sec Warmup&lt;br/&gt;(blink on/off every 1 sec)\"]\nWarmup --&gt; |Time to send | Sending[\"Sending&lt;br/&gt;(blink on/off every 1 sec)\"]\nSending -----&gt; WaitGps</code></pre>","boost":8},{"location":"tracker/V1/#flight-mode-fault-tolerance","title":"Flight Mode Fault-Tolerance","text":"<p>In the event of a hardware malfunction or lockup, the system uses a Watchdog timer that will reset the entire device within seconds instead of locking up for the entire day.</p> <p>Jetpack can also deal with a malfunctioning GPS device.  If no GPS lock occurs within 20 minutes of the attempt, a software and hardware (power) reset of the GPS is performed, after which Jetpack resets itself, resolving any issue in the process.</p>","boost":8},{"location":"tracker/V1/#telemetry","title":"Telemetry","text":"<p>Jetpack transmits Basic Telemetry of GPS coordinates, Altitude, Speed, and Voltage.</p> <p>Voltage telemetry is handled specially</p> <p>The measurement of the voltage is purposefully taken while the GPS is active and loading the power source (expected to be solar).</p> <p>This allows a view of the typically lower (sagged) voltage when under load.</p>","boost":8},{"location":"tracker/V1/#jetpack-power-source","title":"Jetpack Power Source","text":"<p>Jetpack can be powered from different sources -- USB or the dedicated pads on the top front of the Add-on Module.</p> <p>In Configuration Mode, Jetpack is invariably plugged into USB, and so uses power from USB to operate (See A Note about USB for clarification).</p> <p>In Flight Mode, Jetpack can be powered from USB (eg power bank, not computer) or through the dedicated pads on the top front of the Add-on Module.  It is expected that during actual flight, the dedicated front power pads are used.</p> <p>You should not power the Jetpack Flight Mode pads when plugged into the computer via USB.</p> <p>The full power chain</p> <ul> <li>USB power (VBUS) enters and passes over a Schottky diode</li> <li>VSYS is either the result of VBUS-via-Schottky, or powered directly</li> <li>The RPi Pico regulator converts VSYS to 3v3, which powers the system</li> </ul> <p>The Flight Mode power pads supply power to VSYS.</p> <p>It is the VSYS input voltage which is reported as voltage telemetry during flight.</p> <p>For clarity, here is a cut-down version of the RPi Pico schematic alongside a pinout of the RPi Pico. </p>","boost":8},{"location":"tracker/V1/#a-note-about-usb","title":"A Note about USB","text":"<p>There are two aspects of Jetpack behavior which relate to USB</p> <ul> <li>Configuration Mode</li> <li>Power</li> </ul> <p>When Jetpack is plugged into the computer (by USB), Jetpack gets power from the computer, but Jetpack also knows it is connected to a computer (because it communicates over data lines with the computer), and so enters Configuration Mode automatically.</p> <p>When Jetpack is plugged into a USB power bank, Jetpack gets power from the power bank, and enters Flight Mode.  Jetpack does not enter Configuration Mode with a power bank because there is no computer data connection.</p> <p>Some USB cables used with a computer are \"power only\" (no data lines)</p> <p>If you aren't able to connect the GUI to your tracker, you may be accidentally using one of those cables.</p> <p>This scenario would lead to Flight Mode being used despite the cable being plugged into the computer.</p>","boost":8},{"location":"tracker/V1/#jetpack-weight","title":"Jetpack Weight","text":"<p>Jetpack weighs a combined 5.3 grams for RPi Pico + Add-on Module.</p>","boost":8},{"location":"tracker/V1/#jetpack-power-consumption","title":"Jetpack Power Consumption","text":"<p>Jetpack requires a maximum of 70mA at 3.3v to operate.</p> <p>The higher the voltage, the less current required.</p> <p>There are 3 major consumers of power (highest to lowest)</p> <ul> <li>Radio Transmitter</li> <li>GPS</li> <li>The board itself</li> </ul> <p>Jetpack saves power in Flight Mode by only powering the Radio Transmitter and GPS when they are in use.</p> <p>As a result, power consumption is not constant, but varies over time depending on the active operation.</p>","boost":8},{"location":"trackergui/","title":"Tracker GUI","text":"Tracker Connection Connect Disconnect                 Status Disconnected Flight Configuration Save Show Saved Show Default WSPR Configuration Band 2190m (LF) 630m (MF) 160m 80m 60m 40m 30m 20m 17m 15m 12m 10m 6m 4m 2m Channel Callsign SI5351 Correction Configuration                          Correction                      Target 14,095,600 + 1,500Hz Test Temperature TempC / TempF:   C /                   F              Send WSPR Message Callsign  (any legal)                  Grid  (4 char)                  Power dBm 0 3 7 10 13 17 20 23 27 30 33 37 40 43 47 50 53 57 60  (all are valid)                  Send (wait to click until 1 sec after an even minute)              GPS Monitor / Control Reset Modes Hot Warm Cold                          Power                      On, Battery On Off, Battery On Off, Battery Off GPS Time:  GPS 2D:  GPS 3D:  Debug shell json Ping PingX Clear Copy to clipboard"},{"location":"trackergui/help/","title":"Tracker GUI Help","text":""},{"location":"trackergui/help/#overview","title":"Overview","text":"<p>The Jetpack tracker has a Configuration GUI which allows easy configuration and basic testing of the tracker features.</p> <p>The tracker must have had software loaded onto it before it can be configured.  See the Jetpack tracker page for details.</p> <p>This page highlights the functionality of the Configuration GUI.</p>"},{"location":"trackergui/help/#layout","title":"Layout","text":"<p>The GUI is laid out in 3 sections</p> <ul> <li>Tracker Connection</li> <li>Flight Configuration</li> <li>Test</li> </ul> <p>The highlighting in the below screenshot identifies each of those sections.</p> <p></p>"},{"location":"trackergui/help/#tracker-connection","title":"Tracker Connection","text":"<p>The Configuration GUI communicates with the tracker via USB connection.</p> <p>To begin configuration, plug your tracker into the computer via USB.</p> <p>Then, click the \"Connect\" button. </p> <p>You will be presented with a dialog window allowing you to choose the tracker to configure.  Only trackers will be present in the list.</p> <p>Notice that the tracker name is not yet selected.  You must select it by clicking on the name of the tracker.</p> <p></p> <p>Select the tracker, then click the dialog \"Connect\" button.</p> <p></p> <p>You will now see the Status field is green, as well as hardware and software version information of the tracker.</p> <p></p> <p>You will also see a dialog reminding you to save your configuration when you're done.  You close it with the circled X.</p> <p></p> <p>You are now ready to use the rest of the GUI.</p>"},{"location":"trackergui/help/#flight-configuration","title":"Flight Configuration","text":"<p>The tracker will regularly transmit messages that you will later be able to see on a dashboard.</p> <p>In order for this to work properly, the tracker needs 3 pieces of information</p> <ul> <li>The frequency band (usually 20m)</li> <li>The channel (pick one someone else isn't using)</li> <li>Your callsign</li> </ul> <p>The channel and callsign input boxes initially have no configuration and so are colored red.</p> <p>You set these parameters using the input boxes circled.</p> <p></p> <p>When done, save your configuration.  (TEST is not a valid callsign of course).</p> <p></p> <p>If you change a saved parameter, the input box will become highlighted in yellow as a visual indicator that you have unsaved changes.</p> <p>Either save the configuration, or revert back to the saved configuration.</p> <p></p> <p>Once you have saved your configuration, your tracker is ready to fly.  Disconnect the tracker from your computer.</p> <p>You should do some window testing before launching it, though.</p>"},{"location":"trackergui/help/#test","title":"Test","text":"<p>The Test section of the Configuration GUI is not required to be used.</p> <p>The purpose of this section is to provide interactive controls to test the functions of the tracker.</p> <p>Voltage Voltage is NOT shown because when connected to USB, the tracker is receiving a constant 5v supply.  Not very useful to measure.</p> <p>Temperature The tracker measures and transmits the temperature as part of its telemetry.</p> <p>Here you can see the current temperature, updated each second.</p> <p></p> <p>Send WSPR Message This control allows you to send a Regular Type 1 WSPR message using your tracker.</p> <p>You likely want to be able to receive and decode WSPR messages if you intend to use this functionality.</p> <p>Be sure you have at least small antennas (eg 3 inches) soldered to the transmitter antenna pads.</p> <p>You are able to input the 3 Type 1 WSPR fields of Callsign, Grid, and Power.</p> <p>The band and channel frequency are determined using your saved values from Flight Configuration.</p> <p></p> <p>When you click Send, you will see a dialog appear which indicates the tracker is transmitting a message.</p> <p>This dialog will close by itself after the message is sent.</p> <p></p> <p>WSPR messages must be sent only on even minutes, at 1 second past the minute.</p> <p>When Jetpack is in Flight Mode, this is handled automatically by synchronizing with GPS time.</p> <p>When in Configuration Mode (using this GUI), you should use your eyeballs to look at a clock and decide when to send.  time.is is useful for this.</p> <p></p> <p>GPS Monitor / Control</p> <p>The section here consists of</p> <ul> <li>GPS reset control buttons</li> <li>GPS time and lock status</li> <li>Live scrolling NMEA messages from the GPS</li> </ul> <p></p> <p>The GPS \"Reset Modes\" refer to the linked-to GPS-software-controlled reset states.</p> <p>The GPS \"Power\" gives you interactive control over how the GPS module itself is powered</p> <ol> <li>On, Battery On = main power supplied, battery supply also on</li> <li>Off, Battery On = main power cut, battery supply on (should retain data for fast lock)</li> <li>Off, Battery Off = main power cut, battery supply off, module is completely cold</li> </ol> <p>For #1, this is how the tracker runs the GPS when searching for a lock.</p> <p>For #2, this is how the tracker runs the GPS when locked, and waiting to transmit.</p> <p>For #3, this is what the tracker does if the GPS malfunctions and needs a hard reset.</p>"},{"location":"updates/","title":"Updates","text":""},{"location":"updates/2023/05/28/no-search-limit-spot-counts-grid4-promotion-map-spot-colors/","title":"No search limit, spot counts, grid4 promotion, map spot colors","text":"<p>This entry is based on a converted groups.io post, put here for any documentation value.</p> <p>Hi, instead of starting a new thread for feature updates, I'll just reply to this.</p> <p>A few changes I made worth noting:</p> <p>1. No more \"Limit\" input</p> <p>Now the page does \"the right thing\" and you can stop guessing what number to put in there.</p> <p></p> <p>2. Now you get a count of the spots found with your search</p> <p></p> <p>3. Grid4 promotion</p> <p></p> <p></p> <p>In some cases, it is useful to map the grid4 value despite not having a full grid6.</p> <p>These cases are defined to be:</p> <ul> <li> <p>the first spot</p> </li> <li> <p>any gap between spots where the grid4 lands on a different grid not already covered by either neighbor</p> </li> <li> <p>the most recent spot, provided enough time has gone by that the encoded telemetry should have arrived already</p> </li> </ul> <p>4. Grid4 colored differently on the map</p> <p>The blue marks are for grid6, and orange for grid4.</p> <p>Can be helpful for sporadic reception where interesting locations were passed over but only grid4 received.</p> <p>Can also be a little unhelpful if the spot is clearly not lined up with the trend.</p> <p>The mode of the page which only uses grid4 is all orange.</p> <p></p> <p>5. Popups</p> <p>Now you can click on any spot and see a cut-down selection of data available about that spot.</p> <p>Grid6 points have more data available than grid4.</p> <p></p> <p></p> <p>Thanks.</p> <p>Doug</p>"},{"location":"updates/2023/07/17/better-and-new-graphs-more-flight-info/","title":"Better and new graphs, more flight info","text":"<p>This entry is based on a converted groups.io post, put here for any documentation value.</p> <p>Hi,</p> <p>Minor updates to the website, mostly about graphing.</p> <p>Graphs are easier to zoom in/out:</p> <p>Just put your mouse over the chart, scroll up to zoom in, scroll down to zoom out, click+drag to pan left or right.</p> <p>The x-axis automatically adapts to the zoom level.</p> <p></p> <p></p> <p>Graphs show tooltips with both metric and imperial (and no more double-lines):</p> <p></p> <p>Experimental Graphs (only one for now):</p> <p>Underneath the regular graphs is a new expandable section.</p> <p></p> <p>At the moment it has a user-configurable scatterplot that lets you (say) compare the temperature to reported voltage.</p> <p></p> <p>You can compare any measurement to any other measurement, however, and the graph just updates its view.</p> <p></p> <p>Here are two searches that have relatively long histories that may be interesting to look at:</p> <ul> <li>(link) K6STS</li> <li>(link)\u00a0WD0HXN</li> </ul> <p>I didn't want to burden the typical page viewer with too much information, but happy to take feedback about what is/isn't useful to see.</p> <p>The graphs are much faster to load and snappier to use.</p> <p>Can't take a screenshot of that but the page hopefully feels even zippier.</p> <p>Info section has more info</p> <p>A few additional stats got added.</p> <p>Flight duration just does the math for you by looking at the earliest and latest spot in your search and working out the difference.</p> <p></p> <p>Thanks.</p> <p>Doug</p>"},{"location":"updates/2023/11/06/map-auto-updates/","title":"Map auto-updates","text":"<p>This entry is based on a converted groups.io post, put here for any documentation value.</p> <p>Hi, new feature on the website.</p> <p>Auto-Update</p> <p>The page will now automatically search for and display new spots for you.</p> <p>The page does not \"refresh,\" instead, a background query is done, and new data is added to the graphs and map.</p> <p>So, you don't need to refresh the page anymore.\u00a0 It will just have the latest data if there is any.</p> <p>Enabling</p> <p>This feature is automatically enabled when the \"End Date\" is today or in the future.</p> <p></p> <p>Update Indication</p> <p>A new status has been added to indicate the latest time that an update was performed.</p> <p></p> <p>Update Frequency</p> <p>Every 10 minutes, aligned to your specific channel \"start minute.\"</p> <p>The page aligns to 5 minutes after the start of transmission before getting the latest data.\u00a0\u00a0This accounts for the 4 minutes of transmit time, plus another minute since it takes a while for that data to make its way through the various databases.</p> <p>Regardless of when you load the page initially, the page logic will \"snap\" to align to that time.</p> <p>The specific refresh time is calculated as:</p> <ul> <li>Start minute + 5 minutes</li> <li>Plus another 7 seconds since 5 minutes sometimes isn't enough</li> <li>Plus a random number of seconds between 0-5 (to ensure not all pages re-query at the same time)</li> </ul> <p>eg channel 227 has start minute 2, so 2+5=7 minutes each 10 minute slot, plus between 7-13 seconds.</p> <p>Data for 227:</p> <p></p> <p>Automatic update:</p> <p></p> <p>Map Behavior</p> <p>The map will keep its current center and zoom, and simply add additional spots to the map.</p> <p>That is:</p> <ul> <li>The map will\u00a0not\u00a0re-center on the new spot</li> <li>The map will not go back to the default zoom.</li> </ul> <p>The effect of this is that new spots will show up, off-center, possibly out of the current view.\u00a0 This is an intentional decision (as opposed to re-centering automatically).\u00a0 Happy to discuss whether this is the right behavior.</p> <p>Graph Behavior</p> <p>The graphs will not keep their zoom level, they will be zoomed all the way out.</p> <p>Stats Behavior</p> <p>Stats will update automatically.</p> <p>Data Table Behavior</p> <p>Data will update automatically.</p> <p>What about non-channel-query behavior?</p> <p>Also works.\u00a0 Updates every 2 min on even minutes (plus 7 sec and randomness).</p> <p>Thanks.</p> <p>Doug</p>"},{"location":"updates/2023/11/11/gps-based-speed-calculation/","title":"GPS-based speed calculation","text":"<p>This entry is based on a converted groups.io post, put here for any documentation value.</p> <p>Hi, another update -- GPS location used to calculate speed.</p> <p>You will now see new columns of data.</p> <p></p> <p>You will also see that data graphed on the speed graph, blue is the telemetry, green is the location-derived speed.</p> <p></p> <p></p> <p>Example flight:\u00a0https://traquito.github.io/search/spots/dashboard/?band=20m&amp;channel=185&amp;callsign=KD2KDD&amp;dtGte=2023-11-11&amp;dtLte=2023-12-10</p> <p>The GPS location data is smoothed (averaged) and only calculated in some circumstances.</p> <p>The data is calculated only between adjacent 6-char maidenhead grids which are consecutive 10-minutes apart.</p> <p>The data is then smoothed with a rolling 3 to 5 sample average, where the current value is averaged against a minimum of two of its neighbors or their neighbor's neighbor.</p> <p>The reason for the averaging is because the data was very spikey otherwise, even 6-char grids are pretty imprecise, and a left-to-right move is much smaller than a diagonal move.\u00a0 This would cause aliasing and the visual appearance of dramatic changes in speed, even though we know that's not really what's going on.</p> <p>The change, of course, works for all historical flights as well, so feel free to check them out if you have any old favorites.</p> <p>Thanks.</p> <p>Doug</p>"},{"location":"updates/2023/11/12/jump-between-map-and-data/","title":"Jump between map and data","text":"<p>This entry is based on a converted groups.io post, put here for any documentation value.</p> <p>Hi, a few new features to mention.</p> <p>It's all about page interactivity.</p> <p>Focus the map from the graph</p> <p>When you hover over a graph, you see a tooltip showing you the date/time of where your cursor is.</p> <p>Now, when you click any graph at a given time, the map will center on that spot and pop-up the info dialog.</p> <p></p> <p>Focus the map from data</p> <p>A new \"Map\" column has been added with a link per-row.</p> <p>Click the link, and the page will jump to the map, and the map will\u00a0center on that spot and pop-up the info dialog.</p> <p></p> <p>Jump to data from map</p> <p>A new \"jump to data\" link is visible in the map spot pop-up.</p> <p>Click the link, and the page will jump to the data.</p> <p></p> <p>Generally</p> <p>The idea is that it can be hard to look at data and find the corresponding map location, and vise versa, especially when looking at long flights.</p> <p>Hopefully this makes exploring the data a little easier.</p> <p>Example long flight:</p> <p>https://traquito.github.io/search/spots/dashboard/?band=20m&amp;channel=315&amp;callsign=KN4IUD&amp;limit=2000&amp;dtGte=2023-09-09&amp;dtLte=2023-12-09</p> <p>Thanks.</p> <p>Doug</p>"},{"location":"updates/2023/11/14/end-date-optional/","title":"End Date optional","text":"<p>The \"End Date\" is now optional.</p> <p>As in, if you want to see all your spots from  until  you can just leave the End Date blank. <p>This is useful for bookmarking when you don't already know the end date of your new flight and want to keep checking in on it or share the link.</p> <p></p> <p>When End Date is blank, the auto-update feature of the dashboard will always look for new spots, forever.  When you have an End Date set, the auto-update feature only looks for new spots when the End Date is in the future.</p> <p>For me, I update my bookmark when a flight ends to have a precise End Date.  This update means I can start my bookmark with no End Date in mind (always optimistic my flight lives on for months!).</p> <p>Thanks Kevin for the idea.</p> <p>Thanks.</p>"},{"location":"updates/2023/11/16/better-flight-data-identification-fingerprinting/","title":"Better flight data identification (fingerprinting)","text":"<p>Happy to announce I have improved the fingerprinting feature further, and it now successfully resolves an ongoing conflict on channel 248.</p> <p>There are two flights on 248 at the moment:</p> <ul> <li>(link) KD2KDD</li> <li>(link) VE3VRO</li> </ul> <p>They both were flying Traquito Jetpack, both flying over the Atlantic just off the coast, at the same time, and both were on channel 248.</p> <p>The Traquito Web previously was not able to determine which encoded data was valid (two candidates), and so the first half of the flight data was left without decoded data.  Example KD2KDD: </p> <p>Now with the enhanced fingerprinting, the full flight details are available for both.  Example KD2KDD: </p> <p>The fingerprinting algorithm stays the same, mostly.</p> <p>Previously, matching receivers for both regular and encoded, and a transmit frequency within 5 Hz, then it's a match.  If more than one set of telemetry matches, give up.</p> <p>Now, if more than one set of telemetry matches, tighten the frequency limit iteratively.  As in, go to 4 Hz, then 3 Hz, etc.  If you narrow down to one set of telemetry, you win.  If not, give up.</p> <pre><code>if (qualifiedList.length &gt; 1)\n{\n    while (freqDiffLimit &gt; 0 &amp;&amp; qualifiedList.length != 1)\n    {\n        --freqDiffLimit;\n\n        qualifiedList = FnGetQualifiedCandidates(value.regRxDetailsList, value.encCandidateList, freqDiffLimit);\n    }\n}\n</code></pre> <p>Notably this works thanks to NOT calibrating the TCXO precisely.</p> <p>Thanks.</p> <p>Doug</p>"},{"location":"updates/2024/02/18/zacktek-6-char-grids/","title":"ZackTek 6 char grids","text":"<p>This entry is based on a converted groups.io post, put here for any documentation value.</p> <p>Hi, update.</p> <p>ZackTek trackers, which can report 6-char grids in a single \"regular\" report, now show up on the map with 6-char precision (instead of the 4 char grid previously supported).</p> <p>Before:</p> <p></p> <p>After:</p> <p></p> <p>As always, a channel-less flight search is one where you leave the Channel field blank on the spot search dashboard.  This applies to any tracker, but this change allows the ZachTek-specific behavior to shine though, whereas I believe no other tracker does 6-char grid reporting.</p> <p></p> <p>An example ZachTek flight is here: https://traquito.github.io/search/spots/dashboard/?band=20m&amp;channel=&amp;callsign=KC9LGS%2F8&amp;limit=2000&amp;dtGte=2023-12-31&amp;dtLte=2024-01-06</p> <p>If anyone has prior flights from a ZachTek tracker, share some links, I'd be interested to see how they look!</p> <p>Caveat -- there are some situations where wsprnet will force a 4-char grid (say, from another tracker that only reports 4) to become 6-char.  See (this) link for more details.  Basically this is unlikely to affect anyone but thought I'd mention it.</p> <p>Thanks.</p> <p>Doug</p>"},{"location":"updates/2024/02/20/toggle-map-lines/","title":"Toggle map lines","text":"<p>Update,</p> <p>Map now allows you to turn on/off the lines connecting spots.</p> <p>Toggled on:</p> <p></p> <p>Toggled off:</p> <p></p> <p>The toggle is the \"L\" button in the upper-right hand corner.</p> <p></p> <p>This is based on the request from John about his flight (pictured above, linked here) having long durations of missing data, and the lines connecting them making the path appear incorrect.</p> <p>The logic for lines is just \"connect the dots.\"  When there are many missing data points, this can lead to the situation above.</p> <p>Thanks.</p> <p>Doug</p>"},{"location":"updates/2024/03/07/latest-spot-highlighting/","title":"Latest spot highlighting","text":"<p>This entry is based on a converted groups.io post, put here for any documentation value.</p> <p>Update,</p> <p>The map can now highlight your latest spot for you.</p> <p>For those with long flights, who leave the map open and occasionally check for their latest updates, finding the latest location of your balloon can be challenging amongst all the spots.</p> <p>The headline banner talking about your latest spot has now been upgraded.  Hover your mouse over it, and a red circle will appear on the map over your latest spot.</p> <p>Which is the latest?</p> <p></p> <p>Now there is a solution.</p> <p>Hover over this text:</p> <p></p> <p>Circle appears:</p> <p></p> <p>A refresh of the page will activate this feature.</p> <p>Thanks.</p> <p>Doug</p>"},{"location":"updates/2024/03/22/latest-spot-age-at-a-glance/","title":"Latest spot age at a glance","text":"<p>This entry is based on a converted groups.io post, put here for any documentation value.</p> <p>Update,</p> <p>Dashboard simplifies the \"Updated\" and \"Spot age\" indicators with easier to understand values.</p> <p>(new view)</p> <p></p> <p>The \"Updated\":</p> <ul> <li>eliminates the date (it's today)</li> <li>calculates how long until the next update, refreshed each minute</li> </ul> <p>The \"Spot age\":</p> <ul> <li>used to calculate (time now) - (timestamp of the latest regular message)<ul> <li>this is annoying because it's always at least 5 minutes old<ul> <li>(because we have to wait to receive it)</li> </ul> </li> </ul> </li> <li>this is now changed to something easier to understand -- \"Since last seen\"</li> </ul> <p>The \"Since last seen\":</p> <ul> <li>shows you how many minutes ago a search was performed that found a new spot<ul> <li>if you're under 10 minutes old, your spots are current</li> <li>if you're over 10 minutes old, missing spot</li> </ul> </li> <li>updated each minute</li> <li>also eliminates the \"0 days, 0 hours, ...\" prefix if all zero durations</li> </ul> <p></p> <p>Basically the change is meant to</p> <ul> <li>reduce visual clutter</li> <li>make the values directly useful, no mental math required</li> </ul> <p>Thanks.</p> <p>Doug</p>"},{"location":"updates/2024/07/01/kml-export-google-earth/","title":"KML Export (Google Earth)","text":"<p>This entry is based on a converted groups.io post, put here for any documentation value.</p> <p>Update,</p> <p>KML Export</p> <p>The dashboard now supports KML export of the flight path. Useful to import into Google Earth.</p> <p>I thought to do this because my father's flight (link) has gone off the map toward the North Pole and has become difficult to conceptualize on a 2D map. This feature addresses that, and is also just kind of neat.</p> <p>2D Map struggling to show updates, map doesn't appear to show above +/- 85 degrees latitude.</p> <p></p> <p>Here is that same flight, plotted on google earth:</p> <p></p> <p>The KML file automatically defines both the North and South Pole, so if you're close, you can easily see it.</p> <p></p> <p>How to Use</p> <p>Just above the table of data, there are two new options, KML with altitude, and KML without.</p> <p>Click the link, and you get a file download popup.</p> <p></p> <p>Pros / Cons</p> <p>The KML with altitude has pros/cons, as does the no-altitude version.</p> <p>With Altitude Pros:</p> <ul> <li>Neat ability to see altitude changes (eg launch or weather trouble)</li> </ul> <p></p> <p>With Altitude Cons:</p> <ul> <li>GPS jamming, or intermittent spots, means consecutive spots may have a straight-line path through the Earth, hiding the line from view.</li> </ul> <p></p> <p></p> <p>No-Altitude Pros/Cons: - Doesn't suffer downsides, but not as neat</p> <p>More KML Features</p> <p>I may enhance this further to add more information into the KML, but it's kind of just a prototype for now.  Feel free to make suggestions.</p> <p>Unfortunately I don't see a way to get a live updating google earth feed with the technology in use at the moment.</p> <p>I also don't see a way to link directly to Google Earth from the dashboard, so the intermediate step of a file download is necessary (sucks).</p> <p>Stuff about Google Earth</p> <p>I only tried this on the web version of Google Earth. Hopefully it works in any application (let me know if not).</p> <p>Google Earth Web: https://earth.google.com/ (chrome only)</p> <p>You import the downloaded file like this:</p> <p></p> <p>You'll then get a track which has all the spots broken out. You can fly to any given spot using the menu (3 dots) next to it.</p> <p></p> <p>I find it helpful to turn off layers like clouds</p> <p></p> <p></p> <p>Google Earth also lets you measure distance in case you want to see distance from a thing. In this case, I'm measuring distance to the North Pole.</p> <p></p> <p>Thanks and enjoy!</p> <p>Doug</p>"},{"location":"updates/2024/07/08/data-column-cleanup-order-colors/","title":"Data Column cleanup (order, colors)","text":"<p>This entry is based on a converted groups.io post, put here for any documentation value.</p> <p>Small update -- the column headers of the data table on the dashboard are now colored and grouped more intelligently for easier reading.</p> <p></p> <p>Map and DateTime columns remain in the same order and color, but the times are partitioned off from the Map column.</p> <p></p> <p>The Regular message is now Green, and partitioned.</p> <p></p> <p>The Encoded message is now LightPink and partitioned along with some (not all) of the decoded values from the Encoded message.</p> <p>In short, you can ignore everything in LightPink unless you have a reason to look at it. Everything in the LightPink will be reflected in other columns in some actually-useful way or another, so there's unlikely to be anything here you want to look at on a regular basis.</p> <p></p> <p>Grid and Voltage are colored and partitioned away from the other metrics because they aren't metric/imperial values, they are a single unit we all understand.</p> <p></p> <p>The altitude, temperature, tracker-reported speed, gps speed, and distance traveled are now colored and partitioned, each now grouped within that set of data where the units are metric or imperial.</p> <p></p> <p></p> <p>The same approach is done for the channel-less mode, which has far fewer columns.</p> <p></p> <p>Thanks.</p> <p>Doug</p>"},{"location":"updates/2024/07/08/receving-station-support/","title":"Receving Station support","text":"<p>This entry is based on a converted groups.io post, put here for any documentation value.</p> <p>Update - initial support for receiving station data.</p> <p>Wondering which stations received your transmission? The map now indicates (purple dots).</p> <p></p> <p>By default, the latest spot rx stations will be visible.</p> <p>You can mouse over any spot, though, and its receiving stations will become visible.</p> <p>If you click on a spot, the spot popup appears, and freezes the rx stations on the map until you close the popup.</p> <p></p> <p>If you want to see behind the popup, you can actually just scroll the map to the left or right, and when the world wraps around, all the spots and rx stations are visible, but no popup. (this is kind of a hack).</p> <p>If you don't want to see rx stations, there is a new \"R\" button in the upper-right corner. Click it to disable all rx spots. Click again to re-enable.</p> <p></p> <p>For the moment, the R-button affects all search pages together, and is remembered after you close and re-open the page. So it's basically a site-wide on/off switch. Let me know if that matches your desire or not (and what you'd rather see for functionality).</p> <p>There are two new columns added, counting the number of rx stations which heard your regular and encoded transmission.</p> <p></p> <p>Note -- the number of rx stations heard can/will differ from the number of points on the map. The columns show how many of each were heard. For a telemetry spot, though, the fingerprinting must match up the regular and encoded. The number of stations where fingerprinting was effective is what is shown on the map.</p> <p>At the moment this functionality isn't yet implemented for channel-less search.</p> <p>Thanks.</p> <p>Doug</p>"},{"location":"updates/2024/07/08/showhide-units-encoded-data/","title":"Show/Hide units, encoded data","text":"<p>This entry is based on a converted groups.io post, put here for any documentation value.</p> <p>Update, you can now select fewer columns to show in the data table (since it's so wide now).</p> <p>Before:</p> <p></p> <p>After:</p> <p></p> <p>This is controlled by a new (initially hidden) Data Table Control, found directly above the Data Table. Click the title to reveal the control panel.</p> <p></p> <p>Raw Columns - Hide: hide all the columns which aren't directly useful, since they are just the inputs for computing the actually-useful columns.</p> <p>The Raw Columns are:</p> <ul> <li>DateTimeUtc</li> <li>EncCall</li> <li>EncGrid</li> <li>EncPower</li> <li>GpsValid</li> <li>Grid56</li> <li>AltMRaw</li> <li>Knots</li> </ul> <p>The Units selector lets you decide between the metrics being displayed in Metric, Imperial, or Both.</p> <p>Both of the selections apply to any balloon you track, and are remembered when you close and reopen any search page.</p> <p>Downloads from the Data Table still have the full contents, this is just a display feature, the data is all still there.</p> <p>Thanks.</p> <p>Doug</p>"},{"location":"updates/2024/07/12/bar-chart-of-daily-metrics/","title":"Bar Chart of daily metrics","text":"<p>This entry is based on a converted groups.io post, put here for any documentation value.</p> <p>Update, new graph available showing daily counts.</p> <p>eg total spots per day:</p> <p></p> <p>It is found under the Detailed Graphs section, so not visible by default without a click on first page load.</p> <p></p> <p>You can look at the count for a number of metrics:</p> <p></p> <p>You can also see in local or UTC time:</p> <p></p> <p>I found it interesting in general, but also due to my father's flight (link) which repeatedly has been so far North that it's getting 24 hours of sun. Looking at the spot counts, multiple days have received the maximum number of spots possible (144). Nice!</p> <p>As usual, this, and all other changes, work for old flights, too, so feel free to look at old flights which might be interesting!</p> <p>Thanks.</p> <p>Doug</p>"},{"location":"updates/2024/11/19/arduino-library-released/","title":"Arduino Library Released","text":"<p>The v1 version of an Arduino-compatible library for Telemetry has been made available.</p>"},{"location":"updates/2024/11/19/arduino-library-released/#library-details","title":"Library Details","text":"<p>I made a version 1.0.0 Arduino-compatible library available. The Arduino Library Manager sources the code from this repo: https://github.com/traquito/WsprEncoded.</p> <p>Using the v2 IDE, you can look for the WsprEncoded library and install it. Works for RP2040 targets. Is that what everyone is using?</p> <p>From there, click the \"...\" next to the name, Examples, WsprEncodedTest. You can then compile/run the example program.</p> <p></p> <p>The test program gives a demonstration of the way to use the library, and prints out all the inputs/outputs.</p> <p>You should be able to install this library (and not modify it), and have it work in your tracker. Later, this library will be functionally extended to do more stuff, and your tracker will be seamlessly upgraded when you use the library manager.</p> <p>It is also possible to use the repo as a submodule or just clone the repo. This is not tested yet, and in fact probably doesn't work properly yet, but can do if people announce a need.</p> <p>The bottom line is -- if we standardize on a library, we can enhance it, and all the trackers benefit from the consistency and new functionality. If people copy/paste/tweak/etc the code then it's a mess. Don't change the code in your project! We'll change it on github!</p> <p>This library will be documented as well.</p> <p>Test program output:</p> <p>Quote</p> <pre><code>--------------\nStart of tests\n--------------\n\n[Channel details for band 20m, channel 368]\nid1 : 1\nid3 : 8\nid13: 18\nmin : 4\nfreq: 14097060\n\n[Testing Non-Clamped Encoded Values]\nEncoded WSPR U4B Type1 Message for:\nid13      : input as  : Q5\n          : clamped to: Q5\ngrid56    : input as  : JM\n          : clamped to: JM\naltM      : input as  : 5120\n          : clamped to: 5120\ntempC     : input as  : -5\n          : clamped to: -5\nvoltage   : input as  : 3.25\n          : clamped to: 3.25\nspeedKnots: input as  : 25\n          : clamped to: 25\ngpsValid  : input as  : 1\n          : clamped to: 1\n\ncallsign: QD5WPK\ngrid4   : IR39\npwrDbm  : 47\n\nCheck decoding at: https://traquito.github.io/pro/decode/?decode=QD5WPK%20IR39%2047&amp;encode=\n\n[Testing Clamped Encoded Values]\nEncoded WSPR U4B Type1 Message for:\nid13      : input as  : Q5\n          : clamped to: Q5\ngrid56    : input as  : JM\n          : clamped to: JM\naltM      : input as  : 25000\n          : clamped to: 21340\ntempC     : input as  : 45\n          : clamped to: 39\nvoltage   : input as  : 5.60\n          : clamped to: 4.95\nspeedKnots: input as  : 96\n          : clamped to: 82\ngpsValid  : input as  : 1\n          : clamped to: 1\n\ncallsign: QD5XUP\ngrid4   : RK54\npwrDbm  : 43\n\nCheck decoding at: https://traquito.github.io/pro/decode/?decode=QD5XUP%20RK54%2043&amp;encode=\n</code></pre> <p>Thanks.</p> <p>Doug</p>"},{"location":"updates/2024/11/30/site-overhaul/","title":"Site overhaul","text":"<p>Major overhaul! Major improvements!</p>"},{"location":"updates/2024/11/30/site-overhaul/#improvements","title":"Improvements","text":""},{"location":"updates/2024/11/30/site-overhaul/#search-works-great","title":"Search works great!","text":"<p>Entire site is pre-indexed, lightening fast and well organized.</p> <p></p> <p>Search is embedded into the URL for sharing, and results highlighted on page.</p> <p></p>"},{"location":"updates/2024/11/30/site-overhaul/#table-of-contents","title":"Table of contents","text":"<p>Each page has one, which updates the URL and highlights where you are on the page.</p> <p></p>"},{"location":"updates/2024/11/30/site-overhaul/#permanent-links-to-page-sections","title":"Permanent links to page sections","text":"<p>Easier to share/bookmark.</p> <p></p>"},{"location":"updates/2024/11/30/site-overhaul/#site-wide-navigation","title":"Site-wide navigation","text":"<p>An always-visible navigation section keeps information easier to navigate to.</p> <p>Expand or collapse sub-sections.</p> <p></p>"},{"location":"updates/2024/11/30/site-overhaul/#its-pretty","title":"It's pretty","text":"<p>Supports very eye-catching call-outs, code blocks, and more.</p> <p>This is a warning, did you see it?</p>"},{"location":"updates/2024/11/30/site-overhaul/#lightdark-mode","title":"Light/Dark mode.","text":"<p>Why not.</p> <p></p>"},{"location":"updates/2024/11/30/site-overhaul/#easier-to-maintain","title":"Easier to maintain","text":"<p>Documentation is in markdown, easier to contribute and take pull requests.</p> <p>Links to the underlying markdown available on every page.</p> <p></p>"},{"location":"updates/2024/11/30/site-overhaul/#page-freshness","title":"Page freshness","text":"<p>Every page has a marker indicating when it was last updated at the bottom of the page.</p> <p></p>"},{"location":"updates/2024/11/30/site-overhaul/#responsive-design","title":"Responsive design","text":"<p>Fits itself well into every device including mobile.</p>"},{"location":"updates/2024/11/30/site-overhaul/#site-organization-changes","title":"Site Organization Changes","text":"<p>Added Updates section, which is basically a blog for change updates, which helps improve documentation.</p> <p>Rearranged the hierarchy of some pages.</p> <p>eg Channel Map Help is now visibly next to the Channel Map link.</p> <p></p>"},{"location":"updates/2024/11/30/site-overhaul/#technical-details","title":"Technical Details","text":"<p>The site got moved to mkdocs technology (see link at bottom of page).</p> <p>Most dynamic pages (tracker gui, decoder, etc) went along with the conversion.</p> <p>The search dashboard was not converted, it's too complex. Perhaps one day.</p>"},{"location":"updates/2024/11/30/site-overhaul/#feedback","title":"Feedback","text":"<p>If you spot any issues, please report them on the Contact page!</p>"},{"location":"updates/2024/12/03/telemetrys-future/","title":"Telemetry's Future","text":""},{"location":"updates/2024/12/03/telemetrys-future/#overview","title":"Overview","text":"<p>Common telemetry questions:</p> <ul> <li>Where is telemetry documented? (For implementation or curiosity)</li> <li>Can telemetry be extended? And to what?<ul> <li>Who decides these things?</li> </ul> </li> </ul> <p>This change aims to answer those questions and provide a path forward.</p> <p>Short answer -- it's documented here, we can extend it, and we all get to decide how.</p>"},{"location":"updates/2024/12/03/telemetrys-future/#telemetry-sections","title":"Telemetry Sections","text":"<p>There are new sections in Pro</p> <p></p> <p>The sections are:</p> Section Description WSPR Telemetry Overview of the technique of encoding and examples of doing it by hand. Basic Telemetry Specific details of how Telemetry is encoded today. Extended Telemetry Concrete proposal about how to dramatically extend Telemetry going forward. Channels Details about how Channels work. Programming Library Full C++ Arduino-compatible library for Telemetry Encoding/Decoding. History Acknowledgements."},{"location":"updates/2024/12/03/telemetrys-future/#telemetry-steering-committee","title":"Telemetry Steering Committee","text":"<p>It is worth putting a bit of a notional structure around the development of Telemetry going forward.</p> <p>It makes sense to have a committee to discuss (in public on the forum) the pros/cons of any given change to Telemetry.</p> <p>Forum: Telemetry Steering Committee</p> <p>Committee Membership List</p> <ul> <li>Everyone</li> </ul> <p>Areas of contribution (broadly; contribute how you like)</p> Area Description General Comments Any comments whatsoever. Data Comments General comments on data they'd like to see available.(eg pressure in hPa vs bar, or a collection of data points you'd like to see). Message Type Comments Specific comments on specifically the structure and standardization of enumerated Extended Telemetry message types.(eg championing the structure of a GPS Message). Protocol Comments Specific highly-technical comments about the fundamental architecture of any extension to the Basic Telemetry scheme that exists today.(ie technical critiques/contributions to Extended Telemetry in whatever form). Code Contribution Technical contributions to the body of code implementing all Telemetry and/or documentation."},{"location":"updates/2024/12/03/telemetrys-future/#message-types-prototyping-easy","title":"Message Types Prototyping - Easy","text":"<p>There is a Extended Telemetry playground tool available to let you prototype the set of fields that might exist in an Extended Telemetry message.</p> <p>Have a play around with it, see what makes sense, and share with the group if you think you're on to something.</p> <p>As usual, copying the URL of the page shares everything you see.</p> <p>See the Example Message - GPS Stats example in Extended Telemetry</p>"},{"location":"updates/archive/2024/","title":"2024","text":""},{"location":"updates/archive/2023/","title":"2023","text":""},{"location":"updates/category/site/","title":"site","text":""},{"location":"updates/category/api/","title":"api","text":""},{"location":"updates/category/arduino/","title":"arduino","text":""},{"location":"updates/category/git/","title":"git","text":""},{"location":"updates/category/telemetry/","title":"telemetry","text":""},{"location":"updates/category/converted/","title":"converted","text":""},{"location":"updates/page/2/","title":"Updates","text":""},{"location":"updates/archive/2024/page/2/","title":"2024","text":""},{"location":"updates/category/converted/page/2/","title":"converted","text":""},{"location":"updates/category/site/page/2/","title":"site","text":""}]}